;buildInfoPackage: chisel3, version: 3.2.2, scalaVersion: 2.11.12, sbtVersion: 1.3.2
circuit noc : 
  module Router : 
    input clock : Clock
    input reset : Reset
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<32>}, in_D : {flip read : UInt<1>, flip din : UInt<32>}, in_L : {flip read : UInt<1>, flip din : UInt<32>}, in_R : {flip read : UInt<1>, flip din : UInt<32>}, out_U : {write : UInt<1>, dout : UInt<32>}, out_D : {write : UInt<1>, dout : UInt<32>}, out_L : {write : UInt<1>, dout : UInt<32>}, out_R : {write : UInt<1>, dout : UInt<32>}, flip x : UInt<2>, flip y : UInt<2>}
    
    reg som : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 42:20]
    wire out_U_dout : UInt<32>
    out_U_dout <= UInt<32>("h00")
    wire out_D_dout : UInt<32>
    out_D_dout <= UInt<32>("h00")
    wire out_L_dout : UInt<32>
    out_L_dout <= UInt<32>("h00")
    wire out_R_dout : UInt<32>
    out_R_dout <= UInt<32>("h00")
    io.out_U.dout <= out_U_dout @[Router.scala 49:17]
    io.out_D.dout <= out_D_dout @[Router.scala 50:17]
    io.out_L.dout <= out_L_dout @[Router.scala 51:17]
    io.out_R.dout <= out_R_dout @[Router.scala 52:17]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 54:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 55:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 56:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 57:18]
    wire dataReg : UInt<1>
    dataReg <= UInt<1>("h00")
    reg dataReg_U : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 63:26]
    reg dataReg_D : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 64:26]
    reg dataReg_L : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 65:26]
    reg dataReg_R : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 66:26]
    when io.in_U.read : @[Router.scala 69:25]
      dataReg_U <= io.in_U.din @[Router.scala 70:17]
      node _T = bits(dataReg_U, 1, 0) @[Router.scala 71:36]
      node _T_1 = bits(dataReg_U, 3, 2) @[Router.scala 72:36]
      node _T_2 = gt(_T, io.x) @[Router.scala 74:26]
      when _T_2 : @[Router.scala 74:34]
        io.out_R.write <= UInt<1>("h01") @[Router.scala 75:24]
        skip @[Router.scala 74:34]
      else : @[Router.scala 76:41]
        node _T_3 = lt(_T, io.x) @[Router.scala 76:33]
        when _T_3 : @[Router.scala 76:41]
          io.out_L.write <= UInt<1>("h01") @[Router.scala 77:24]
          skip @[Router.scala 76:41]
        else : @[Router.scala 78:20]
          node _T_4 = gt(_T_1, io.y) @[Router.scala 79:29]
          when _T_4 : @[Router.scala 79:37]
            io.out_D.write <= UInt<1>("h01") @[Router.scala 80:26]
            skip @[Router.scala 79:37]
          else : @[Router.scala 81:43]
            node _T_5 = lt(_T_1, io.y) @[Router.scala 81:35]
            when _T_5 : @[Router.scala 81:43]
              io.out_U.write <= UInt<1>("h01") @[Router.scala 82:26]
              skip @[Router.scala 81:43]
          skip @[Router.scala 78:20]
      when io.out_D.write : @[Router.scala 86:27]
        io.out_D.dout <= dataReg_U @[Router.scala 87:23]
        skip @[Router.scala 86:27]
      else : @[Router.scala 88:33]
        when io.out_L.write : @[Router.scala 88:33]
          io.out_L.dout <= dataReg_U @[Router.scala 89:23]
          skip @[Router.scala 88:33]
        else : @[Router.scala 90:34]
          when io.out_R.write : @[Router.scala 90:34]
            io.out_R.dout <= dataReg_U @[Router.scala 91:23]
            skip @[Router.scala 90:34]
      skip @[Router.scala 69:25]
    else : @[Router.scala 94:31]
      when io.in_D.read : @[Router.scala 94:31]
        dataReg_D <= io.in_D.din @[Router.scala 95:17]
        node _T_6 = bits(dataReg_D, 31, 30) @[Router.scala 96:36]
        node _T_7 = bits(dataReg_D, 29, 28) @[Router.scala 97:36]
        node _T_8 = gt(_T_6, io.x) @[Router.scala 98:26]
        when _T_8 : @[Router.scala 98:34]
          io.out_R.write <= UInt<1>("h01") @[Router.scala 99:24]
          skip @[Router.scala 98:34]
        else : @[Router.scala 100:41]
          node _T_9 = lt(_T_6, io.x) @[Router.scala 100:33]
          when _T_9 : @[Router.scala 100:41]
            io.out_L.write <= UInt<1>("h01") @[Router.scala 101:24]
            skip @[Router.scala 100:41]
          else : @[Router.scala 102:20]
            node _T_10 = gt(_T_7, io.y) @[Router.scala 103:29]
            when _T_10 : @[Router.scala 103:37]
              io.out_D.write <= UInt<1>("h01") @[Router.scala 104:26]
              skip @[Router.scala 103:37]
            else : @[Router.scala 105:43]
              node _T_11 = lt(_T_7, io.y) @[Router.scala 105:35]
              when _T_11 : @[Router.scala 105:43]
                io.out_U.write <= UInt<1>("h01") @[Router.scala 106:26]
                skip @[Router.scala 105:43]
            skip @[Router.scala 102:20]
        when io.out_U.write : @[Router.scala 110:27]
          io.out_U.dout <= dataReg_D @[Router.scala 111:23]
          skip @[Router.scala 110:27]
        else : @[Router.scala 112:33]
          when io.out_L.write : @[Router.scala 112:33]
            io.out_L.dout <= dataReg_D @[Router.scala 113:23]
            skip @[Router.scala 112:33]
          else : @[Router.scala 114:34]
            when io.out_R.write : @[Router.scala 114:34]
              io.out_R.dout <= dataReg_D @[Router.scala 115:23]
              skip @[Router.scala 114:34]
        skip @[Router.scala 94:31]
      else : @[Router.scala 117:30]
        when io.in_L.read : @[Router.scala 117:30]
          dataReg_L <= io.in_L.din @[Router.scala 118:17]
          node _T_12 = bits(dataReg_L, 31, 30) @[Router.scala 119:36]
          node _T_13 = bits(dataReg_L, 29, 28) @[Router.scala 120:36]
          node _T_14 = gt(_T_12, io.x) @[Router.scala 122:26]
          when _T_14 : @[Router.scala 122:34]
            io.out_R.write <= UInt<1>("h01") @[Router.scala 123:24]
            skip @[Router.scala 122:34]
          else : @[Router.scala 124:41]
            node _T_15 = lt(_T_12, io.x) @[Router.scala 124:33]
            when _T_15 : @[Router.scala 124:41]
              io.out_L.write <= UInt<1>("h01") @[Router.scala 125:24]
              skip @[Router.scala 124:41]
            else : @[Router.scala 126:20]
              node _T_16 = gt(_T_13, io.y) @[Router.scala 127:29]
              when _T_16 : @[Router.scala 127:37]
                io.out_D.write <= UInt<1>("h01") @[Router.scala 128:26]
                skip @[Router.scala 127:37]
              else : @[Router.scala 129:43]
                node _T_17 = lt(_T_13, io.y) @[Router.scala 129:35]
                when _T_17 : @[Router.scala 129:43]
                  io.out_U.write <= UInt<1>("h01") @[Router.scala 130:26]
                  skip @[Router.scala 129:43]
              skip @[Router.scala 126:20]
          when io.out_D.write : @[Router.scala 133:27]
            io.out_D.dout <= dataReg_L @[Router.scala 134:23]
            skip @[Router.scala 133:27]
          else : @[Router.scala 135:33]
            when io.out_U.write : @[Router.scala 135:33]
              io.out_U.dout <= dataReg_L @[Router.scala 136:23]
              skip @[Router.scala 135:33]
            else : @[Router.scala 137:34]
              when io.out_R.write : @[Router.scala 137:34]
                io.out_R.dout <= dataReg_L @[Router.scala 138:23]
                skip @[Router.scala 137:34]
          skip @[Router.scala 117:30]
        else : @[Router.scala 140:30]
          when io.in_R.read : @[Router.scala 140:30]
            dataReg_R <= io.in_R.din @[Router.scala 141:17]
            node _T_18 = bits(dataReg_R, 31, 30) @[Router.scala 142:36]
            node _T_19 = bits(dataReg_R, 29, 28) @[Router.scala 143:36]
            node _T_20 = gt(_T_18, io.x) @[Router.scala 145:26]
            when _T_20 : @[Router.scala 145:34]
              io.out_R.write <= UInt<1>("h01") @[Router.scala 146:24]
              skip @[Router.scala 145:34]
            else : @[Router.scala 147:41]
              node _T_21 = lt(_T_18, io.x) @[Router.scala 147:33]
              when _T_21 : @[Router.scala 147:41]
                io.out_L.write <= UInt<1>("h01") @[Router.scala 148:24]
                skip @[Router.scala 147:41]
              else : @[Router.scala 149:20]
                node _T_22 = gt(_T_19, io.y) @[Router.scala 150:29]
                when _T_22 : @[Router.scala 150:37]
                  io.out_D.write <= UInt<1>("h01") @[Router.scala 151:26]
                  skip @[Router.scala 150:37]
                else : @[Router.scala 152:43]
                  node _T_23 = lt(_T_19, io.y) @[Router.scala 152:35]
                  when _T_23 : @[Router.scala 152:43]
                    io.out_U.write <= UInt<1>("h01") @[Router.scala 153:26]
                    skip @[Router.scala 152:43]
                skip @[Router.scala 149:20]
            when io.out_D.write : @[Router.scala 156:27]
              io.out_D.dout <= dataReg_R @[Router.scala 157:23]
              skip @[Router.scala 156:27]
            else : @[Router.scala 158:33]
              when io.out_L.write : @[Router.scala 158:33]
                io.out_L.dout <= dataReg_R @[Router.scala 159:23]
                skip @[Router.scala 158:33]
              else : @[Router.scala 160:34]
                when io.out_U.write : @[Router.scala 160:34]
                  io.out_U.dout <= dataReg_R @[Router.scala 161:23]
                  skip @[Router.scala 160:34]
            skip @[Router.scala 140:30]
    
  module Router_1 : 
    input clock : Clock
    input reset : Reset
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<32>}, in_D : {flip read : UInt<1>, flip din : UInt<32>}, in_L : {flip read : UInt<1>, flip din : UInt<32>}, in_R : {flip read : UInt<1>, flip din : UInt<32>}, out_U : {write : UInt<1>, dout : UInt<32>}, out_D : {write : UInt<1>, dout : UInt<32>}, out_L : {write : UInt<1>, dout : UInt<32>}, out_R : {write : UInt<1>, dout : UInt<32>}, flip x : UInt<2>, flip y : UInt<2>}
    
    reg som : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 42:20]
    wire out_U_dout : UInt<32>
    out_U_dout <= UInt<32>("h00")
    wire out_D_dout : UInt<32>
    out_D_dout <= UInt<32>("h00")
    wire out_L_dout : UInt<32>
    out_L_dout <= UInt<32>("h00")
    wire out_R_dout : UInt<32>
    out_R_dout <= UInt<32>("h00")
    io.out_U.dout <= out_U_dout @[Router.scala 49:17]
    io.out_D.dout <= out_D_dout @[Router.scala 50:17]
    io.out_L.dout <= out_L_dout @[Router.scala 51:17]
    io.out_R.dout <= out_R_dout @[Router.scala 52:17]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 54:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 55:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 56:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 57:18]
    wire dataReg : UInt<1>
    dataReg <= UInt<1>("h00")
    reg dataReg_U : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 63:26]
    reg dataReg_D : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 64:26]
    reg dataReg_L : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 65:26]
    reg dataReg_R : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 66:26]
    when io.in_U.read : @[Router.scala 69:25]
      dataReg_U <= io.in_U.din @[Router.scala 70:17]
      node _T = bits(dataReg_U, 1, 0) @[Router.scala 71:36]
      node _T_1 = bits(dataReg_U, 3, 2) @[Router.scala 72:36]
      node _T_2 = gt(_T, io.x) @[Router.scala 74:26]
      when _T_2 : @[Router.scala 74:34]
        io.out_R.write <= UInt<1>("h01") @[Router.scala 75:24]
        skip @[Router.scala 74:34]
      else : @[Router.scala 76:41]
        node _T_3 = lt(_T, io.x) @[Router.scala 76:33]
        when _T_3 : @[Router.scala 76:41]
          io.out_L.write <= UInt<1>("h01") @[Router.scala 77:24]
          skip @[Router.scala 76:41]
        else : @[Router.scala 78:20]
          node _T_4 = gt(_T_1, io.y) @[Router.scala 79:29]
          when _T_4 : @[Router.scala 79:37]
            io.out_D.write <= UInt<1>("h01") @[Router.scala 80:26]
            skip @[Router.scala 79:37]
          else : @[Router.scala 81:43]
            node _T_5 = lt(_T_1, io.y) @[Router.scala 81:35]
            when _T_5 : @[Router.scala 81:43]
              io.out_U.write <= UInt<1>("h01") @[Router.scala 82:26]
              skip @[Router.scala 81:43]
          skip @[Router.scala 78:20]
      when io.out_D.write : @[Router.scala 86:27]
        io.out_D.dout <= dataReg_U @[Router.scala 87:23]
        skip @[Router.scala 86:27]
      else : @[Router.scala 88:33]
        when io.out_L.write : @[Router.scala 88:33]
          io.out_L.dout <= dataReg_U @[Router.scala 89:23]
          skip @[Router.scala 88:33]
        else : @[Router.scala 90:34]
          when io.out_R.write : @[Router.scala 90:34]
            io.out_R.dout <= dataReg_U @[Router.scala 91:23]
            skip @[Router.scala 90:34]
      skip @[Router.scala 69:25]
    else : @[Router.scala 94:31]
      when io.in_D.read : @[Router.scala 94:31]
        dataReg_D <= io.in_D.din @[Router.scala 95:17]
        node _T_6 = bits(dataReg_D, 31, 30) @[Router.scala 96:36]
        node _T_7 = bits(dataReg_D, 29, 28) @[Router.scala 97:36]
        node _T_8 = gt(_T_6, io.x) @[Router.scala 98:26]
        when _T_8 : @[Router.scala 98:34]
          io.out_R.write <= UInt<1>("h01") @[Router.scala 99:24]
          skip @[Router.scala 98:34]
        else : @[Router.scala 100:41]
          node _T_9 = lt(_T_6, io.x) @[Router.scala 100:33]
          when _T_9 : @[Router.scala 100:41]
            io.out_L.write <= UInt<1>("h01") @[Router.scala 101:24]
            skip @[Router.scala 100:41]
          else : @[Router.scala 102:20]
            node _T_10 = gt(_T_7, io.y) @[Router.scala 103:29]
            when _T_10 : @[Router.scala 103:37]
              io.out_D.write <= UInt<1>("h01") @[Router.scala 104:26]
              skip @[Router.scala 103:37]
            else : @[Router.scala 105:43]
              node _T_11 = lt(_T_7, io.y) @[Router.scala 105:35]
              when _T_11 : @[Router.scala 105:43]
                io.out_U.write <= UInt<1>("h01") @[Router.scala 106:26]
                skip @[Router.scala 105:43]
            skip @[Router.scala 102:20]
        when io.out_U.write : @[Router.scala 110:27]
          io.out_U.dout <= dataReg_D @[Router.scala 111:23]
          skip @[Router.scala 110:27]
        else : @[Router.scala 112:33]
          when io.out_L.write : @[Router.scala 112:33]
            io.out_L.dout <= dataReg_D @[Router.scala 113:23]
            skip @[Router.scala 112:33]
          else : @[Router.scala 114:34]
            when io.out_R.write : @[Router.scala 114:34]
              io.out_R.dout <= dataReg_D @[Router.scala 115:23]
              skip @[Router.scala 114:34]
        skip @[Router.scala 94:31]
      else : @[Router.scala 117:30]
        when io.in_L.read : @[Router.scala 117:30]
          dataReg_L <= io.in_L.din @[Router.scala 118:17]
          node _T_12 = bits(dataReg_L, 31, 30) @[Router.scala 119:36]
          node _T_13 = bits(dataReg_L, 29, 28) @[Router.scala 120:36]
          node _T_14 = gt(_T_12, io.x) @[Router.scala 122:26]
          when _T_14 : @[Router.scala 122:34]
            io.out_R.write <= UInt<1>("h01") @[Router.scala 123:24]
            skip @[Router.scala 122:34]
          else : @[Router.scala 124:41]
            node _T_15 = lt(_T_12, io.x) @[Router.scala 124:33]
            when _T_15 : @[Router.scala 124:41]
              io.out_L.write <= UInt<1>("h01") @[Router.scala 125:24]
              skip @[Router.scala 124:41]
            else : @[Router.scala 126:20]
              node _T_16 = gt(_T_13, io.y) @[Router.scala 127:29]
              when _T_16 : @[Router.scala 127:37]
                io.out_D.write <= UInt<1>("h01") @[Router.scala 128:26]
                skip @[Router.scala 127:37]
              else : @[Router.scala 129:43]
                node _T_17 = lt(_T_13, io.y) @[Router.scala 129:35]
                when _T_17 : @[Router.scala 129:43]
                  io.out_U.write <= UInt<1>("h01") @[Router.scala 130:26]
                  skip @[Router.scala 129:43]
              skip @[Router.scala 126:20]
          when io.out_D.write : @[Router.scala 133:27]
            io.out_D.dout <= dataReg_L @[Router.scala 134:23]
            skip @[Router.scala 133:27]
          else : @[Router.scala 135:33]
            when io.out_U.write : @[Router.scala 135:33]
              io.out_U.dout <= dataReg_L @[Router.scala 136:23]
              skip @[Router.scala 135:33]
            else : @[Router.scala 137:34]
              when io.out_R.write : @[Router.scala 137:34]
                io.out_R.dout <= dataReg_L @[Router.scala 138:23]
                skip @[Router.scala 137:34]
          skip @[Router.scala 117:30]
        else : @[Router.scala 140:30]
          when io.in_R.read : @[Router.scala 140:30]
            dataReg_R <= io.in_R.din @[Router.scala 141:17]
            node _T_18 = bits(dataReg_R, 31, 30) @[Router.scala 142:36]
            node _T_19 = bits(dataReg_R, 29, 28) @[Router.scala 143:36]
            node _T_20 = gt(_T_18, io.x) @[Router.scala 145:26]
            when _T_20 : @[Router.scala 145:34]
              io.out_R.write <= UInt<1>("h01") @[Router.scala 146:24]
              skip @[Router.scala 145:34]
            else : @[Router.scala 147:41]
              node _T_21 = lt(_T_18, io.x) @[Router.scala 147:33]
              when _T_21 : @[Router.scala 147:41]
                io.out_L.write <= UInt<1>("h01") @[Router.scala 148:24]
                skip @[Router.scala 147:41]
              else : @[Router.scala 149:20]
                node _T_22 = gt(_T_19, io.y) @[Router.scala 150:29]
                when _T_22 : @[Router.scala 150:37]
                  io.out_D.write <= UInt<1>("h01") @[Router.scala 151:26]
                  skip @[Router.scala 150:37]
                else : @[Router.scala 152:43]
                  node _T_23 = lt(_T_19, io.y) @[Router.scala 152:35]
                  when _T_23 : @[Router.scala 152:43]
                    io.out_U.write <= UInt<1>("h01") @[Router.scala 153:26]
                    skip @[Router.scala 152:43]
                skip @[Router.scala 149:20]
            when io.out_D.write : @[Router.scala 156:27]
              io.out_D.dout <= dataReg_R @[Router.scala 157:23]
              skip @[Router.scala 156:27]
            else : @[Router.scala 158:33]
              when io.out_L.write : @[Router.scala 158:33]
                io.out_L.dout <= dataReg_R @[Router.scala 159:23]
                skip @[Router.scala 158:33]
              else : @[Router.scala 160:34]
                when io.out_U.write : @[Router.scala 160:34]
                  io.out_U.dout <= dataReg_R @[Router.scala 161:23]
                  skip @[Router.scala 160:34]
            skip @[Router.scala 140:30]
    
  module Router_2 : 
    input clock : Clock
    input reset : Reset
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<32>}, in_D : {flip read : UInt<1>, flip din : UInt<32>}, in_L : {flip read : UInt<1>, flip din : UInt<32>}, in_R : {flip read : UInt<1>, flip din : UInt<32>}, out_U : {write : UInt<1>, dout : UInt<32>}, out_D : {write : UInt<1>, dout : UInt<32>}, out_L : {write : UInt<1>, dout : UInt<32>}, out_R : {write : UInt<1>, dout : UInt<32>}, flip x : UInt<2>, flip y : UInt<2>}
    
    reg som : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 42:20]
    wire out_U_dout : UInt<32>
    out_U_dout <= UInt<32>("h00")
    wire out_D_dout : UInt<32>
    out_D_dout <= UInt<32>("h00")
    wire out_L_dout : UInt<32>
    out_L_dout <= UInt<32>("h00")
    wire out_R_dout : UInt<32>
    out_R_dout <= UInt<32>("h00")
    io.out_U.dout <= out_U_dout @[Router.scala 49:17]
    io.out_D.dout <= out_D_dout @[Router.scala 50:17]
    io.out_L.dout <= out_L_dout @[Router.scala 51:17]
    io.out_R.dout <= out_R_dout @[Router.scala 52:17]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 54:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 55:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 56:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 57:18]
    wire dataReg : UInt<1>
    dataReg <= UInt<1>("h00")
    reg dataReg_U : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 63:26]
    reg dataReg_D : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 64:26]
    reg dataReg_L : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 65:26]
    reg dataReg_R : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 66:26]
    when io.in_U.read : @[Router.scala 69:25]
      dataReg_U <= io.in_U.din @[Router.scala 70:17]
      node _T = bits(dataReg_U, 1, 0) @[Router.scala 71:36]
      node _T_1 = bits(dataReg_U, 3, 2) @[Router.scala 72:36]
      node _T_2 = gt(_T, io.x) @[Router.scala 74:26]
      when _T_2 : @[Router.scala 74:34]
        io.out_R.write <= UInt<1>("h01") @[Router.scala 75:24]
        skip @[Router.scala 74:34]
      else : @[Router.scala 76:41]
        node _T_3 = lt(_T, io.x) @[Router.scala 76:33]
        when _T_3 : @[Router.scala 76:41]
          io.out_L.write <= UInt<1>("h01") @[Router.scala 77:24]
          skip @[Router.scala 76:41]
        else : @[Router.scala 78:20]
          node _T_4 = gt(_T_1, io.y) @[Router.scala 79:29]
          when _T_4 : @[Router.scala 79:37]
            io.out_D.write <= UInt<1>("h01") @[Router.scala 80:26]
            skip @[Router.scala 79:37]
          else : @[Router.scala 81:43]
            node _T_5 = lt(_T_1, io.y) @[Router.scala 81:35]
            when _T_5 : @[Router.scala 81:43]
              io.out_U.write <= UInt<1>("h01") @[Router.scala 82:26]
              skip @[Router.scala 81:43]
          skip @[Router.scala 78:20]
      when io.out_D.write : @[Router.scala 86:27]
        io.out_D.dout <= dataReg_U @[Router.scala 87:23]
        skip @[Router.scala 86:27]
      else : @[Router.scala 88:33]
        when io.out_L.write : @[Router.scala 88:33]
          io.out_L.dout <= dataReg_U @[Router.scala 89:23]
          skip @[Router.scala 88:33]
        else : @[Router.scala 90:34]
          when io.out_R.write : @[Router.scala 90:34]
            io.out_R.dout <= dataReg_U @[Router.scala 91:23]
            skip @[Router.scala 90:34]
      skip @[Router.scala 69:25]
    else : @[Router.scala 94:31]
      when io.in_D.read : @[Router.scala 94:31]
        dataReg_D <= io.in_D.din @[Router.scala 95:17]
        node _T_6 = bits(dataReg_D, 31, 30) @[Router.scala 96:36]
        node _T_7 = bits(dataReg_D, 29, 28) @[Router.scala 97:36]
        node _T_8 = gt(_T_6, io.x) @[Router.scala 98:26]
        when _T_8 : @[Router.scala 98:34]
          io.out_R.write <= UInt<1>("h01") @[Router.scala 99:24]
          skip @[Router.scala 98:34]
        else : @[Router.scala 100:41]
          node _T_9 = lt(_T_6, io.x) @[Router.scala 100:33]
          when _T_9 : @[Router.scala 100:41]
            io.out_L.write <= UInt<1>("h01") @[Router.scala 101:24]
            skip @[Router.scala 100:41]
          else : @[Router.scala 102:20]
            node _T_10 = gt(_T_7, io.y) @[Router.scala 103:29]
            when _T_10 : @[Router.scala 103:37]
              io.out_D.write <= UInt<1>("h01") @[Router.scala 104:26]
              skip @[Router.scala 103:37]
            else : @[Router.scala 105:43]
              node _T_11 = lt(_T_7, io.y) @[Router.scala 105:35]
              when _T_11 : @[Router.scala 105:43]
                io.out_U.write <= UInt<1>("h01") @[Router.scala 106:26]
                skip @[Router.scala 105:43]
            skip @[Router.scala 102:20]
        when io.out_U.write : @[Router.scala 110:27]
          io.out_U.dout <= dataReg_D @[Router.scala 111:23]
          skip @[Router.scala 110:27]
        else : @[Router.scala 112:33]
          when io.out_L.write : @[Router.scala 112:33]
            io.out_L.dout <= dataReg_D @[Router.scala 113:23]
            skip @[Router.scala 112:33]
          else : @[Router.scala 114:34]
            when io.out_R.write : @[Router.scala 114:34]
              io.out_R.dout <= dataReg_D @[Router.scala 115:23]
              skip @[Router.scala 114:34]
        skip @[Router.scala 94:31]
      else : @[Router.scala 117:30]
        when io.in_L.read : @[Router.scala 117:30]
          dataReg_L <= io.in_L.din @[Router.scala 118:17]
          node _T_12 = bits(dataReg_L, 31, 30) @[Router.scala 119:36]
          node _T_13 = bits(dataReg_L, 29, 28) @[Router.scala 120:36]
          node _T_14 = gt(_T_12, io.x) @[Router.scala 122:26]
          when _T_14 : @[Router.scala 122:34]
            io.out_R.write <= UInt<1>("h01") @[Router.scala 123:24]
            skip @[Router.scala 122:34]
          else : @[Router.scala 124:41]
            node _T_15 = lt(_T_12, io.x) @[Router.scala 124:33]
            when _T_15 : @[Router.scala 124:41]
              io.out_L.write <= UInt<1>("h01") @[Router.scala 125:24]
              skip @[Router.scala 124:41]
            else : @[Router.scala 126:20]
              node _T_16 = gt(_T_13, io.y) @[Router.scala 127:29]
              when _T_16 : @[Router.scala 127:37]
                io.out_D.write <= UInt<1>("h01") @[Router.scala 128:26]
                skip @[Router.scala 127:37]
              else : @[Router.scala 129:43]
                node _T_17 = lt(_T_13, io.y) @[Router.scala 129:35]
                when _T_17 : @[Router.scala 129:43]
                  io.out_U.write <= UInt<1>("h01") @[Router.scala 130:26]
                  skip @[Router.scala 129:43]
              skip @[Router.scala 126:20]
          when io.out_D.write : @[Router.scala 133:27]
            io.out_D.dout <= dataReg_L @[Router.scala 134:23]
            skip @[Router.scala 133:27]
          else : @[Router.scala 135:33]
            when io.out_U.write : @[Router.scala 135:33]
              io.out_U.dout <= dataReg_L @[Router.scala 136:23]
              skip @[Router.scala 135:33]
            else : @[Router.scala 137:34]
              when io.out_R.write : @[Router.scala 137:34]
                io.out_R.dout <= dataReg_L @[Router.scala 138:23]
                skip @[Router.scala 137:34]
          skip @[Router.scala 117:30]
        else : @[Router.scala 140:30]
          when io.in_R.read : @[Router.scala 140:30]
            dataReg_R <= io.in_R.din @[Router.scala 141:17]
            node _T_18 = bits(dataReg_R, 31, 30) @[Router.scala 142:36]
            node _T_19 = bits(dataReg_R, 29, 28) @[Router.scala 143:36]
            node _T_20 = gt(_T_18, io.x) @[Router.scala 145:26]
            when _T_20 : @[Router.scala 145:34]
              io.out_R.write <= UInt<1>("h01") @[Router.scala 146:24]
              skip @[Router.scala 145:34]
            else : @[Router.scala 147:41]
              node _T_21 = lt(_T_18, io.x) @[Router.scala 147:33]
              when _T_21 : @[Router.scala 147:41]
                io.out_L.write <= UInt<1>("h01") @[Router.scala 148:24]
                skip @[Router.scala 147:41]
              else : @[Router.scala 149:20]
                node _T_22 = gt(_T_19, io.y) @[Router.scala 150:29]
                when _T_22 : @[Router.scala 150:37]
                  io.out_D.write <= UInt<1>("h01") @[Router.scala 151:26]
                  skip @[Router.scala 150:37]
                else : @[Router.scala 152:43]
                  node _T_23 = lt(_T_19, io.y) @[Router.scala 152:35]
                  when _T_23 : @[Router.scala 152:43]
                    io.out_U.write <= UInt<1>("h01") @[Router.scala 153:26]
                    skip @[Router.scala 152:43]
                skip @[Router.scala 149:20]
            when io.out_D.write : @[Router.scala 156:27]
              io.out_D.dout <= dataReg_R @[Router.scala 157:23]
              skip @[Router.scala 156:27]
            else : @[Router.scala 158:33]
              when io.out_L.write : @[Router.scala 158:33]
                io.out_L.dout <= dataReg_R @[Router.scala 159:23]
                skip @[Router.scala 158:33]
              else : @[Router.scala 160:34]
                when io.out_U.write : @[Router.scala 160:34]
                  io.out_U.dout <= dataReg_R @[Router.scala 161:23]
                  skip @[Router.scala 160:34]
            skip @[Router.scala 140:30]
    
  module Router_3 : 
    input clock : Clock
    input reset : Reset
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<32>}, in_D : {flip read : UInt<1>, flip din : UInt<32>}, in_L : {flip read : UInt<1>, flip din : UInt<32>}, in_R : {flip read : UInt<1>, flip din : UInt<32>}, out_U : {write : UInt<1>, dout : UInt<32>}, out_D : {write : UInt<1>, dout : UInt<32>}, out_L : {write : UInt<1>, dout : UInt<32>}, out_R : {write : UInt<1>, dout : UInt<32>}, flip x : UInt<2>, flip y : UInt<2>}
    
    reg som : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 42:20]
    wire out_U_dout : UInt<32>
    out_U_dout <= UInt<32>("h00")
    wire out_D_dout : UInt<32>
    out_D_dout <= UInt<32>("h00")
    wire out_L_dout : UInt<32>
    out_L_dout <= UInt<32>("h00")
    wire out_R_dout : UInt<32>
    out_R_dout <= UInt<32>("h00")
    io.out_U.dout <= out_U_dout @[Router.scala 49:17]
    io.out_D.dout <= out_D_dout @[Router.scala 50:17]
    io.out_L.dout <= out_L_dout @[Router.scala 51:17]
    io.out_R.dout <= out_R_dout @[Router.scala 52:17]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 54:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 55:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 56:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 57:18]
    wire dataReg : UInt<1>
    dataReg <= UInt<1>("h00")
    reg dataReg_U : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 63:26]
    reg dataReg_D : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 64:26]
    reg dataReg_L : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 65:26]
    reg dataReg_R : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 66:26]
    when io.in_U.read : @[Router.scala 69:25]
      dataReg_U <= io.in_U.din @[Router.scala 70:17]
      node _T = bits(dataReg_U, 1, 0) @[Router.scala 71:36]
      node _T_1 = bits(dataReg_U, 3, 2) @[Router.scala 72:36]
      node _T_2 = gt(_T, io.x) @[Router.scala 74:26]
      when _T_2 : @[Router.scala 74:34]
        io.out_R.write <= UInt<1>("h01") @[Router.scala 75:24]
        skip @[Router.scala 74:34]
      else : @[Router.scala 76:41]
        node _T_3 = lt(_T, io.x) @[Router.scala 76:33]
        when _T_3 : @[Router.scala 76:41]
          io.out_L.write <= UInt<1>("h01") @[Router.scala 77:24]
          skip @[Router.scala 76:41]
        else : @[Router.scala 78:20]
          node _T_4 = gt(_T_1, io.y) @[Router.scala 79:29]
          when _T_4 : @[Router.scala 79:37]
            io.out_D.write <= UInt<1>("h01") @[Router.scala 80:26]
            skip @[Router.scala 79:37]
          else : @[Router.scala 81:43]
            node _T_5 = lt(_T_1, io.y) @[Router.scala 81:35]
            when _T_5 : @[Router.scala 81:43]
              io.out_U.write <= UInt<1>("h01") @[Router.scala 82:26]
              skip @[Router.scala 81:43]
          skip @[Router.scala 78:20]
      when io.out_D.write : @[Router.scala 86:27]
        io.out_D.dout <= dataReg_U @[Router.scala 87:23]
        skip @[Router.scala 86:27]
      else : @[Router.scala 88:33]
        when io.out_L.write : @[Router.scala 88:33]
          io.out_L.dout <= dataReg_U @[Router.scala 89:23]
          skip @[Router.scala 88:33]
        else : @[Router.scala 90:34]
          when io.out_R.write : @[Router.scala 90:34]
            io.out_R.dout <= dataReg_U @[Router.scala 91:23]
            skip @[Router.scala 90:34]
      skip @[Router.scala 69:25]
    else : @[Router.scala 94:31]
      when io.in_D.read : @[Router.scala 94:31]
        dataReg_D <= io.in_D.din @[Router.scala 95:17]
        node _T_6 = bits(dataReg_D, 31, 30) @[Router.scala 96:36]
        node _T_7 = bits(dataReg_D, 29, 28) @[Router.scala 97:36]
        node _T_8 = gt(_T_6, io.x) @[Router.scala 98:26]
        when _T_8 : @[Router.scala 98:34]
          io.out_R.write <= UInt<1>("h01") @[Router.scala 99:24]
          skip @[Router.scala 98:34]
        else : @[Router.scala 100:41]
          node _T_9 = lt(_T_6, io.x) @[Router.scala 100:33]
          when _T_9 : @[Router.scala 100:41]
            io.out_L.write <= UInt<1>("h01") @[Router.scala 101:24]
            skip @[Router.scala 100:41]
          else : @[Router.scala 102:20]
            node _T_10 = gt(_T_7, io.y) @[Router.scala 103:29]
            when _T_10 : @[Router.scala 103:37]
              io.out_D.write <= UInt<1>("h01") @[Router.scala 104:26]
              skip @[Router.scala 103:37]
            else : @[Router.scala 105:43]
              node _T_11 = lt(_T_7, io.y) @[Router.scala 105:35]
              when _T_11 : @[Router.scala 105:43]
                io.out_U.write <= UInt<1>("h01") @[Router.scala 106:26]
                skip @[Router.scala 105:43]
            skip @[Router.scala 102:20]
        when io.out_U.write : @[Router.scala 110:27]
          io.out_U.dout <= dataReg_D @[Router.scala 111:23]
          skip @[Router.scala 110:27]
        else : @[Router.scala 112:33]
          when io.out_L.write : @[Router.scala 112:33]
            io.out_L.dout <= dataReg_D @[Router.scala 113:23]
            skip @[Router.scala 112:33]
          else : @[Router.scala 114:34]
            when io.out_R.write : @[Router.scala 114:34]
              io.out_R.dout <= dataReg_D @[Router.scala 115:23]
              skip @[Router.scala 114:34]
        skip @[Router.scala 94:31]
      else : @[Router.scala 117:30]
        when io.in_L.read : @[Router.scala 117:30]
          dataReg_L <= io.in_L.din @[Router.scala 118:17]
          node _T_12 = bits(dataReg_L, 31, 30) @[Router.scala 119:36]
          node _T_13 = bits(dataReg_L, 29, 28) @[Router.scala 120:36]
          node _T_14 = gt(_T_12, io.x) @[Router.scala 122:26]
          when _T_14 : @[Router.scala 122:34]
            io.out_R.write <= UInt<1>("h01") @[Router.scala 123:24]
            skip @[Router.scala 122:34]
          else : @[Router.scala 124:41]
            node _T_15 = lt(_T_12, io.x) @[Router.scala 124:33]
            when _T_15 : @[Router.scala 124:41]
              io.out_L.write <= UInt<1>("h01") @[Router.scala 125:24]
              skip @[Router.scala 124:41]
            else : @[Router.scala 126:20]
              node _T_16 = gt(_T_13, io.y) @[Router.scala 127:29]
              when _T_16 : @[Router.scala 127:37]
                io.out_D.write <= UInt<1>("h01") @[Router.scala 128:26]
                skip @[Router.scala 127:37]
              else : @[Router.scala 129:43]
                node _T_17 = lt(_T_13, io.y) @[Router.scala 129:35]
                when _T_17 : @[Router.scala 129:43]
                  io.out_U.write <= UInt<1>("h01") @[Router.scala 130:26]
                  skip @[Router.scala 129:43]
              skip @[Router.scala 126:20]
          when io.out_D.write : @[Router.scala 133:27]
            io.out_D.dout <= dataReg_L @[Router.scala 134:23]
            skip @[Router.scala 133:27]
          else : @[Router.scala 135:33]
            when io.out_U.write : @[Router.scala 135:33]
              io.out_U.dout <= dataReg_L @[Router.scala 136:23]
              skip @[Router.scala 135:33]
            else : @[Router.scala 137:34]
              when io.out_R.write : @[Router.scala 137:34]
                io.out_R.dout <= dataReg_L @[Router.scala 138:23]
                skip @[Router.scala 137:34]
          skip @[Router.scala 117:30]
        else : @[Router.scala 140:30]
          when io.in_R.read : @[Router.scala 140:30]
            dataReg_R <= io.in_R.din @[Router.scala 141:17]
            node _T_18 = bits(dataReg_R, 31, 30) @[Router.scala 142:36]
            node _T_19 = bits(dataReg_R, 29, 28) @[Router.scala 143:36]
            node _T_20 = gt(_T_18, io.x) @[Router.scala 145:26]
            when _T_20 : @[Router.scala 145:34]
              io.out_R.write <= UInt<1>("h01") @[Router.scala 146:24]
              skip @[Router.scala 145:34]
            else : @[Router.scala 147:41]
              node _T_21 = lt(_T_18, io.x) @[Router.scala 147:33]
              when _T_21 : @[Router.scala 147:41]
                io.out_L.write <= UInt<1>("h01") @[Router.scala 148:24]
                skip @[Router.scala 147:41]
              else : @[Router.scala 149:20]
                node _T_22 = gt(_T_19, io.y) @[Router.scala 150:29]
                when _T_22 : @[Router.scala 150:37]
                  io.out_D.write <= UInt<1>("h01") @[Router.scala 151:26]
                  skip @[Router.scala 150:37]
                else : @[Router.scala 152:43]
                  node _T_23 = lt(_T_19, io.y) @[Router.scala 152:35]
                  when _T_23 : @[Router.scala 152:43]
                    io.out_U.write <= UInt<1>("h01") @[Router.scala 153:26]
                    skip @[Router.scala 152:43]
                skip @[Router.scala 149:20]
            when io.out_D.write : @[Router.scala 156:27]
              io.out_D.dout <= dataReg_R @[Router.scala 157:23]
              skip @[Router.scala 156:27]
            else : @[Router.scala 158:33]
              when io.out_L.write : @[Router.scala 158:33]
                io.out_L.dout <= dataReg_R @[Router.scala 159:23]
                skip @[Router.scala 158:33]
              else : @[Router.scala 160:34]
                when io.out_U.write : @[Router.scala 160:34]
                  io.out_U.dout <= dataReg_R @[Router.scala 161:23]
                  skip @[Router.scala 160:34]
            skip @[Router.scala 140:30]
    
  module noc : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    inst router1 of Router @[noc.scala 13:23]
    router1.clock <= clock
    router1.reset <= reset
    inst router2 of Router_1 @[noc.scala 14:23]
    router2.clock <= clock
    router2.reset <= reset
    inst router3 of Router_2 @[noc.scala 15:23]
    router3.clock <= clock
    router3.reset <= reset
    inst router4 of Router_3 @[noc.scala 16:23]
    router4.clock <= clock
    router4.reset <= reset
    router1.io.x <= UInt<1>("h00") @[noc.scala 18:16]
    router1.io.y <= UInt<1>("h00") @[noc.scala 19:16]
    router2.io.x <= UInt<1>("h00") @[noc.scala 21:16]
    router2.io.y <= UInt<1>("h01") @[noc.scala 22:16]
    router3.io.x <= UInt<1>("h01") @[noc.scala 24:16]
    router3.io.y <= UInt<1>("h00") @[noc.scala 25:16]
    router4.io.x <= UInt<1>("h01") @[noc.scala 27:16]
    router4.io.y <= UInt<1>("h01") @[noc.scala 28:16]
    router1.io.in_U.din <= router3.io.out_D.dout @[noc.scala 31:23]
    router1.io.in_D.din <= router3.io.out_U.dout @[noc.scala 32:23]
    router1.io.in_L.din <= router2.io.out_R.dout @[noc.scala 33:23]
    router1.io.in_R.din <= router2.io.out_L.dout @[noc.scala 34:23]
    router2.io.in_U.din <= router4.io.out_D.dout @[noc.scala 36:23]
    router2.io.in_D.din <= router4.io.out_U.dout @[noc.scala 37:23]
    router2.io.in_L.din <= router1.io.out_R.dout @[noc.scala 38:23]
    router2.io.in_R.din <= router1.io.out_L.dout @[noc.scala 39:23]
    router3.io.in_U.din <= router1.io.out_D.dout @[noc.scala 41:23]
    router3.io.in_D.din <= router1.io.out_U.dout @[noc.scala 42:23]
    router3.io.in_L.din <= router4.io.out_R.dout @[noc.scala 43:23]
    router3.io.in_R.din <= router4.io.out_L.dout @[noc.scala 44:23]
    router4.io.in_U.din <= router2.io.out_D.dout @[noc.scala 46:23]
    router4.io.in_D.din <= router2.io.out_U.dout @[noc.scala 47:23]
    router4.io.in_L.din <= router3.io.out_R.dout @[noc.scala 48:23]
    router4.io.in_R.din <= router3.io.out_L.dout @[noc.scala 49:23]
    router1.io.in_U.read <= router3.io.out_D.write @[noc.scala 54:24]
    router1.io.in_D.read <= router3.io.out_U.write @[noc.scala 55:24]
    router1.io.in_L.read <= router2.io.out_R.write @[noc.scala 56:24]
    router1.io.in_R.read <= router2.io.out_L.write @[noc.scala 57:24]
    router2.io.in_U.read <= router4.io.out_D.write @[noc.scala 59:24]
    router2.io.in_D.read <= router4.io.out_U.write @[noc.scala 60:24]
    router2.io.in_L.read <= router1.io.out_R.write @[noc.scala 61:24]
    router2.io.in_R.read <= router1.io.out_L.write @[noc.scala 62:24]
    router3.io.in_U.read <= router1.io.out_D.write @[noc.scala 64:24]
    router3.io.in_D.read <= router1.io.out_U.write @[noc.scala 65:24]
    router3.io.in_L.read <= router4.io.out_R.write @[noc.scala 66:24]
    router3.io.in_R.read <= router4.io.out_L.write @[noc.scala 67:24]
    router4.io.in_U.read <= router2.io.out_D.write @[noc.scala 69:24]
    router4.io.in_D.read <= router2.io.out_U.write @[noc.scala 70:24]
    router4.io.in_L.read <= router3.io.out_R.write @[noc.scala 71:24]
    router4.io.in_R.read <= router3.io.out_L.write @[noc.scala 72:24]
    
