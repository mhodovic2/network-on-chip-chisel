;buildInfoPackage: chisel3, version: 3.2.2, scalaVersion: 2.11.12, sbtVersion: 1.3.2
circuit noc : 
  module Router : 
    input clock : Clock
    input reset : Reset
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<32>}, in_D : {flip read : UInt<1>, flip din : UInt<32>}, in_L : {flip read : UInt<1>, flip din : UInt<32>}, in_R : {flip read : UInt<1>, flip din : UInt<32>}, in_CPU : {flip read : UInt<1>, flip din : UInt<32>}, out_U : {write : UInt<1>, dout : UInt<32>}, out_D : {write : UInt<1>, dout : UInt<32>}, out_L : {write : UInt<1>, dout : UInt<32>}, out_R : {write : UInt<1>, dout : UInt<32>}, out_CPU : {write : UInt<1>, dout : UInt<32>}, flip x : UInt<2>, flip y : UInt<2>}
    
    reg som : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 44:20]
    wire out_U_dout : UInt<32>
    out_U_dout <= UInt<32>("h00")
    wire out_D_dout : UInt<32>
    out_D_dout <= UInt<32>("h00")
    wire out_L_dout : UInt<32>
    out_L_dout <= UInt<32>("h00")
    wire out_R_dout : UInt<32>
    out_R_dout <= UInt<32>("h00")
    wire out_CPU_dout : UInt<32>
    out_CPU_dout <= UInt<32>("h00")
    io.out_U.dout <= out_U_dout @[Router.scala 52:17]
    io.out_D.dout <= out_D_dout @[Router.scala 53:17]
    io.out_L.dout <= out_L_dout @[Router.scala 54:17]
    io.out_R.dout <= out_R_dout @[Router.scala 55:17]
    io.out_CPU.dout <= out_CPU_dout @[Router.scala 56:19]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 58:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 59:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 60:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 61:18]
    io.out_CPU.write <= UInt<1>("h00") @[Router.scala 62:20]
    wire dataReg : UInt<1>
    dataReg <= UInt<1>("h00")
    reg dataReg_U : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 68:26]
    reg dataReg_D : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 69:26]
    reg dataReg_L : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 70:26]
    reg dataReg_R : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 71:26]
    reg dataReg_CPU : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 72:28]
    when io.in_U.read : @[Router.scala 75:25]
      dataReg_U <= io.in_U.din @[Router.scala 76:17]
      node _T = bits(dataReg_U, 1, 0) @[Router.scala 77:36]
      node _T_1 = bits(dataReg_U, 3, 2) @[Router.scala 78:36]
      node _T_2 = gt(_T, io.x) @[Router.scala 80:26]
      when _T_2 : @[Router.scala 80:34]
        io.out_R.write <= UInt<1>("h01") @[Router.scala 81:24]
        skip @[Router.scala 80:34]
      else : @[Router.scala 82:41]
        node _T_3 = lt(_T, io.x) @[Router.scala 82:33]
        when _T_3 : @[Router.scala 82:41]
          io.out_L.write <= UInt<1>("h01") @[Router.scala 83:24]
          skip @[Router.scala 82:41]
        else : @[Router.scala 84:20]
          node _T_4 = gt(_T_1, io.y) @[Router.scala 85:29]
          when _T_4 : @[Router.scala 85:37]
            io.out_D.write <= UInt<1>("h01") @[Router.scala 86:26]
            skip @[Router.scala 85:37]
          else : @[Router.scala 87:43]
            node _T_5 = lt(_T_1, io.y) @[Router.scala 87:35]
            when _T_5 : @[Router.scala 87:43]
              io.out_U.write <= UInt<1>("h01") @[Router.scala 88:26]
              skip @[Router.scala 87:43]
            else : @[Router.scala 89:22]
              io.out_CPU.write <= UInt<1>("h01") @[Router.scala 90:28]
              skip @[Router.scala 89:22]
          skip @[Router.scala 84:20]
      when io.out_D.write : @[Router.scala 94:27]
        io.out_D.dout <= dataReg_U @[Router.scala 95:23]
        skip @[Router.scala 94:27]
      else : @[Router.scala 96:33]
        when io.out_L.write : @[Router.scala 96:33]
          io.out_L.dout <= dataReg_U @[Router.scala 97:23]
          skip @[Router.scala 96:33]
        else : @[Router.scala 98:34]
          when io.out_R.write : @[Router.scala 98:34]
            io.out_R.dout <= dataReg_U @[Router.scala 99:23]
            skip @[Router.scala 98:34]
          else : @[Router.scala 100:36]
            when io.out_CPU.write : @[Router.scala 100:36]
              io.out_CPU.dout <= dataReg_CPU @[Router.scala 101:25]
              skip @[Router.scala 100:36]
      skip @[Router.scala 75:25]
    else : @[Router.scala 106:31]
      when io.in_D.read : @[Router.scala 106:31]
        dataReg_D <= io.in_D.din @[Router.scala 107:17]
        node _T_6 = bits(dataReg_D, 31, 30) @[Router.scala 108:36]
        node _T_7 = bits(dataReg_D, 29, 28) @[Router.scala 109:36]
        node _T_8 = gt(_T_6, io.x) @[Router.scala 110:26]
        when _T_8 : @[Router.scala 110:34]
          io.out_R.write <= UInt<1>("h01") @[Router.scala 111:24]
          skip @[Router.scala 110:34]
        else : @[Router.scala 112:41]
          node _T_9 = lt(_T_6, io.x) @[Router.scala 112:33]
          when _T_9 : @[Router.scala 112:41]
            io.out_L.write <= UInt<1>("h01") @[Router.scala 113:24]
            skip @[Router.scala 112:41]
          else : @[Router.scala 114:20]
            node _T_10 = gt(_T_7, io.y) @[Router.scala 115:29]
            when _T_10 : @[Router.scala 115:37]
              io.out_D.write <= UInt<1>("h01") @[Router.scala 116:26]
              skip @[Router.scala 115:37]
            else : @[Router.scala 117:43]
              node _T_11 = lt(_T_7, io.y) @[Router.scala 117:35]
              when _T_11 : @[Router.scala 117:43]
                io.out_U.write <= UInt<1>("h01") @[Router.scala 118:26]
                skip @[Router.scala 117:43]
              else : @[Router.scala 119:21]
                io.out_CPU.write <= UInt<1>("h01") @[Router.scala 120:28]
                skip @[Router.scala 119:21]
            skip @[Router.scala 114:20]
        when io.out_U.write : @[Router.scala 124:27]
          io.out_U.dout <= dataReg_D @[Router.scala 125:23]
          skip @[Router.scala 124:27]
        else : @[Router.scala 126:33]
          when io.out_L.write : @[Router.scala 126:33]
            io.out_L.dout <= dataReg_D @[Router.scala 127:23]
            skip @[Router.scala 126:33]
          else : @[Router.scala 128:34]
            when io.out_R.write : @[Router.scala 128:34]
              io.out_R.dout <= dataReg_D @[Router.scala 129:23]
              skip @[Router.scala 128:34]
            else : @[Router.scala 130:36]
              when io.out_CPU.write : @[Router.scala 130:36]
                io.out_CPU.dout <= dataReg_CPU @[Router.scala 131:25]
                skip @[Router.scala 130:36]
        skip @[Router.scala 106:31]
      else : @[Router.scala 136:30]
        when io.in_L.read : @[Router.scala 136:30]
          dataReg_L <= io.in_L.din @[Router.scala 137:17]
          node _T_12 = bits(dataReg_L, 31, 30) @[Router.scala 138:36]
          node _T_13 = bits(dataReg_L, 29, 28) @[Router.scala 139:36]
          node _T_14 = gt(_T_12, io.x) @[Router.scala 141:26]
          when _T_14 : @[Router.scala 141:34]
            io.out_R.write <= UInt<1>("h01") @[Router.scala 142:24]
            skip @[Router.scala 141:34]
          else : @[Router.scala 143:41]
            node _T_15 = lt(_T_12, io.x) @[Router.scala 143:33]
            when _T_15 : @[Router.scala 143:41]
              io.out_L.write <= UInt<1>("h01") @[Router.scala 144:24]
              skip @[Router.scala 143:41]
            else : @[Router.scala 145:20]
              node _T_16 = gt(_T_13, io.y) @[Router.scala 146:29]
              when _T_16 : @[Router.scala 146:37]
                io.out_D.write <= UInt<1>("h01") @[Router.scala 147:26]
                skip @[Router.scala 146:37]
              else : @[Router.scala 148:43]
                node _T_17 = lt(_T_13, io.y) @[Router.scala 148:35]
                when _T_17 : @[Router.scala 148:43]
                  io.out_U.write <= UInt<1>("h01") @[Router.scala 149:26]
                  skip @[Router.scala 148:43]
                else : @[Router.scala 150:21]
                  io.out_CPU.write <= UInt<1>("h01") @[Router.scala 151:28]
                  skip @[Router.scala 150:21]
              skip @[Router.scala 145:20]
          when io.out_D.write : @[Router.scala 154:27]
            io.out_D.dout <= dataReg_L @[Router.scala 155:23]
            skip @[Router.scala 154:27]
          else : @[Router.scala 156:33]
            when io.out_U.write : @[Router.scala 156:33]
              io.out_U.dout <= dataReg_L @[Router.scala 157:23]
              skip @[Router.scala 156:33]
            else : @[Router.scala 158:34]
              when io.out_R.write : @[Router.scala 158:34]
                io.out_R.dout <= dataReg_L @[Router.scala 159:23]
                skip @[Router.scala 158:34]
              else : @[Router.scala 160:36]
                when io.out_CPU.write : @[Router.scala 160:36]
                  io.out_CPU.dout <= dataReg_CPU @[Router.scala 161:25]
                  skip @[Router.scala 160:36]
          skip @[Router.scala 136:30]
        else : @[Router.scala 166:30]
          when io.in_R.read : @[Router.scala 166:30]
            dataReg_R <= io.in_R.din @[Router.scala 167:17]
            node _T_18 = bits(dataReg_R, 31, 30) @[Router.scala 168:36]
            node _T_19 = bits(dataReg_R, 29, 28) @[Router.scala 169:36]
            node _T_20 = gt(_T_18, io.x) @[Router.scala 171:26]
            when _T_20 : @[Router.scala 171:34]
              io.out_R.write <= UInt<1>("h01") @[Router.scala 172:24]
              skip @[Router.scala 171:34]
            else : @[Router.scala 173:41]
              node _T_21 = lt(_T_18, io.x) @[Router.scala 173:33]
              when _T_21 : @[Router.scala 173:41]
                io.out_L.write <= UInt<1>("h01") @[Router.scala 174:24]
                skip @[Router.scala 173:41]
              else : @[Router.scala 175:20]
                node _T_22 = gt(_T_19, io.y) @[Router.scala 176:29]
                when _T_22 : @[Router.scala 176:37]
                  io.out_D.write <= UInt<1>("h01") @[Router.scala 177:26]
                  skip @[Router.scala 176:37]
                else : @[Router.scala 178:43]
                  node _T_23 = lt(_T_19, io.y) @[Router.scala 178:35]
                  when _T_23 : @[Router.scala 178:43]
                    io.out_U.write <= UInt<1>("h01") @[Router.scala 179:26]
                    skip @[Router.scala 178:43]
                  else : @[Router.scala 180:22]
                    io.out_CPU.write <= UInt<1>("h01") @[Router.scala 181:28]
                    skip @[Router.scala 180:22]
                skip @[Router.scala 175:20]
            when io.out_D.write : @[Router.scala 184:27]
              io.out_D.dout <= dataReg_R @[Router.scala 185:23]
              skip @[Router.scala 184:27]
            else : @[Router.scala 186:33]
              when io.out_L.write : @[Router.scala 186:33]
                io.out_L.dout <= dataReg_R @[Router.scala 187:23]
                skip @[Router.scala 186:33]
              else : @[Router.scala 188:34]
                when io.out_U.write : @[Router.scala 188:34]
                  io.out_U.dout <= dataReg_R @[Router.scala 189:23]
                  skip @[Router.scala 188:34]
                else : @[Router.scala 190:36]
                  when io.out_CPU.write : @[Router.scala 190:36]
                    io.out_CPU.dout <= dataReg_CPU @[Router.scala 191:25]
                    skip @[Router.scala 190:36]
            skip @[Router.scala 166:30]
          else : @[Router.scala 196:32]
            when io.in_CPU.read : @[Router.scala 196:32]
              dataReg_CPU <= io.in_CPU.din @[Router.scala 197:19]
              node _T_24 = bits(dataReg_CPU, 31, 30) @[Router.scala 198:38]
              node _T_25 = bits(dataReg_CPU, 29, 28) @[Router.scala 199:38]
              node _T_26 = gt(_T_24, io.x) @[Router.scala 201:26]
              when _T_26 : @[Router.scala 201:34]
                io.out_R.write <= UInt<1>("h01") @[Router.scala 202:24]
                skip @[Router.scala 201:34]
              else : @[Router.scala 203:41]
                node _T_27 = lt(_T_24, io.x) @[Router.scala 203:33]
                when _T_27 : @[Router.scala 203:41]
                  io.out_L.write <= UInt<1>("h01") @[Router.scala 204:24]
                  skip @[Router.scala 203:41]
                else : @[Router.scala 205:20]
                  node _T_28 = gt(_T_25, io.y) @[Router.scala 206:29]
                  when _T_28 : @[Router.scala 206:37]
                    io.out_D.write <= UInt<1>("h01") @[Router.scala 207:26]
                    skip @[Router.scala 206:37]
                  else : @[Router.scala 208:43]
                    node _T_29 = lt(_T_25, io.y) @[Router.scala 208:35]
                    when _T_29 : @[Router.scala 208:43]
                      io.out_U.write <= UInt<1>("h01") @[Router.scala 209:26]
                      skip @[Router.scala 208:43]
                    else : @[Router.scala 210:22]
                      io.out_CPU.write <= UInt<1>("h01") @[Router.scala 211:28]
                      skip @[Router.scala 210:22]
                  skip @[Router.scala 205:20]
              when io.out_D.write : @[Router.scala 214:27]
                io.out_D.dout <= dataReg_CPU @[Router.scala 215:23]
                skip @[Router.scala 214:27]
              else : @[Router.scala 216:33]
                when io.out_L.write : @[Router.scala 216:33]
                  io.out_L.dout <= dataReg_CPU @[Router.scala 217:23]
                  skip @[Router.scala 216:33]
                else : @[Router.scala 218:34]
                  when io.out_U.write : @[Router.scala 218:34]
                    io.out_U.dout <= dataReg_CPU @[Router.scala 219:23]
                    skip @[Router.scala 218:34]
                  else : @[Router.scala 220:36]
                    when io.out_CPU.write : @[Router.scala 220:36]
                      io.out_CPU.dout <= dataReg_CPU @[Router.scala 221:25]
                      skip @[Router.scala 220:36]
              skip @[Router.scala 196:32]
    
  module Router_1 : 
    input clock : Clock
    input reset : Reset
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<32>}, in_D : {flip read : UInt<1>, flip din : UInt<32>}, in_L : {flip read : UInt<1>, flip din : UInt<32>}, in_R : {flip read : UInt<1>, flip din : UInt<32>}, in_CPU : {flip read : UInt<1>, flip din : UInt<32>}, out_U : {write : UInt<1>, dout : UInt<32>}, out_D : {write : UInt<1>, dout : UInt<32>}, out_L : {write : UInt<1>, dout : UInt<32>}, out_R : {write : UInt<1>, dout : UInt<32>}, out_CPU : {write : UInt<1>, dout : UInt<32>}, flip x : UInt<2>, flip y : UInt<2>}
    
    reg som : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 44:20]
    wire out_U_dout : UInt<32>
    out_U_dout <= UInt<32>("h00")
    wire out_D_dout : UInt<32>
    out_D_dout <= UInt<32>("h00")
    wire out_L_dout : UInt<32>
    out_L_dout <= UInt<32>("h00")
    wire out_R_dout : UInt<32>
    out_R_dout <= UInt<32>("h00")
    wire out_CPU_dout : UInt<32>
    out_CPU_dout <= UInt<32>("h00")
    io.out_U.dout <= out_U_dout @[Router.scala 52:17]
    io.out_D.dout <= out_D_dout @[Router.scala 53:17]
    io.out_L.dout <= out_L_dout @[Router.scala 54:17]
    io.out_R.dout <= out_R_dout @[Router.scala 55:17]
    io.out_CPU.dout <= out_CPU_dout @[Router.scala 56:19]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 58:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 59:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 60:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 61:18]
    io.out_CPU.write <= UInt<1>("h00") @[Router.scala 62:20]
    wire dataReg : UInt<1>
    dataReg <= UInt<1>("h00")
    reg dataReg_U : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 68:26]
    reg dataReg_D : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 69:26]
    reg dataReg_L : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 70:26]
    reg dataReg_R : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 71:26]
    reg dataReg_CPU : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 72:28]
    when io.in_U.read : @[Router.scala 75:25]
      dataReg_U <= io.in_U.din @[Router.scala 76:17]
      node _T = bits(dataReg_U, 1, 0) @[Router.scala 77:36]
      node _T_1 = bits(dataReg_U, 3, 2) @[Router.scala 78:36]
      node _T_2 = gt(_T, io.x) @[Router.scala 80:26]
      when _T_2 : @[Router.scala 80:34]
        io.out_R.write <= UInt<1>("h01") @[Router.scala 81:24]
        skip @[Router.scala 80:34]
      else : @[Router.scala 82:41]
        node _T_3 = lt(_T, io.x) @[Router.scala 82:33]
        when _T_3 : @[Router.scala 82:41]
          io.out_L.write <= UInt<1>("h01") @[Router.scala 83:24]
          skip @[Router.scala 82:41]
        else : @[Router.scala 84:20]
          node _T_4 = gt(_T_1, io.y) @[Router.scala 85:29]
          when _T_4 : @[Router.scala 85:37]
            io.out_D.write <= UInt<1>("h01") @[Router.scala 86:26]
            skip @[Router.scala 85:37]
          else : @[Router.scala 87:43]
            node _T_5 = lt(_T_1, io.y) @[Router.scala 87:35]
            when _T_5 : @[Router.scala 87:43]
              io.out_U.write <= UInt<1>("h01") @[Router.scala 88:26]
              skip @[Router.scala 87:43]
            else : @[Router.scala 89:22]
              io.out_CPU.write <= UInt<1>("h01") @[Router.scala 90:28]
              skip @[Router.scala 89:22]
          skip @[Router.scala 84:20]
      when io.out_D.write : @[Router.scala 94:27]
        io.out_D.dout <= dataReg_U @[Router.scala 95:23]
        skip @[Router.scala 94:27]
      else : @[Router.scala 96:33]
        when io.out_L.write : @[Router.scala 96:33]
          io.out_L.dout <= dataReg_U @[Router.scala 97:23]
          skip @[Router.scala 96:33]
        else : @[Router.scala 98:34]
          when io.out_R.write : @[Router.scala 98:34]
            io.out_R.dout <= dataReg_U @[Router.scala 99:23]
            skip @[Router.scala 98:34]
          else : @[Router.scala 100:36]
            when io.out_CPU.write : @[Router.scala 100:36]
              io.out_CPU.dout <= dataReg_CPU @[Router.scala 101:25]
              skip @[Router.scala 100:36]
      skip @[Router.scala 75:25]
    else : @[Router.scala 106:31]
      when io.in_D.read : @[Router.scala 106:31]
        dataReg_D <= io.in_D.din @[Router.scala 107:17]
        node _T_6 = bits(dataReg_D, 31, 30) @[Router.scala 108:36]
        node _T_7 = bits(dataReg_D, 29, 28) @[Router.scala 109:36]
        node _T_8 = gt(_T_6, io.x) @[Router.scala 110:26]
        when _T_8 : @[Router.scala 110:34]
          io.out_R.write <= UInt<1>("h01") @[Router.scala 111:24]
          skip @[Router.scala 110:34]
        else : @[Router.scala 112:41]
          node _T_9 = lt(_T_6, io.x) @[Router.scala 112:33]
          when _T_9 : @[Router.scala 112:41]
            io.out_L.write <= UInt<1>("h01") @[Router.scala 113:24]
            skip @[Router.scala 112:41]
          else : @[Router.scala 114:20]
            node _T_10 = gt(_T_7, io.y) @[Router.scala 115:29]
            when _T_10 : @[Router.scala 115:37]
              io.out_D.write <= UInt<1>("h01") @[Router.scala 116:26]
              skip @[Router.scala 115:37]
            else : @[Router.scala 117:43]
              node _T_11 = lt(_T_7, io.y) @[Router.scala 117:35]
              when _T_11 : @[Router.scala 117:43]
                io.out_U.write <= UInt<1>("h01") @[Router.scala 118:26]
                skip @[Router.scala 117:43]
              else : @[Router.scala 119:21]
                io.out_CPU.write <= UInt<1>("h01") @[Router.scala 120:28]
                skip @[Router.scala 119:21]
            skip @[Router.scala 114:20]
        when io.out_U.write : @[Router.scala 124:27]
          io.out_U.dout <= dataReg_D @[Router.scala 125:23]
          skip @[Router.scala 124:27]
        else : @[Router.scala 126:33]
          when io.out_L.write : @[Router.scala 126:33]
            io.out_L.dout <= dataReg_D @[Router.scala 127:23]
            skip @[Router.scala 126:33]
          else : @[Router.scala 128:34]
            when io.out_R.write : @[Router.scala 128:34]
              io.out_R.dout <= dataReg_D @[Router.scala 129:23]
              skip @[Router.scala 128:34]
            else : @[Router.scala 130:36]
              when io.out_CPU.write : @[Router.scala 130:36]
                io.out_CPU.dout <= dataReg_CPU @[Router.scala 131:25]
                skip @[Router.scala 130:36]
        skip @[Router.scala 106:31]
      else : @[Router.scala 136:30]
        when io.in_L.read : @[Router.scala 136:30]
          dataReg_L <= io.in_L.din @[Router.scala 137:17]
          node _T_12 = bits(dataReg_L, 31, 30) @[Router.scala 138:36]
          node _T_13 = bits(dataReg_L, 29, 28) @[Router.scala 139:36]
          node _T_14 = gt(_T_12, io.x) @[Router.scala 141:26]
          when _T_14 : @[Router.scala 141:34]
            io.out_R.write <= UInt<1>("h01") @[Router.scala 142:24]
            skip @[Router.scala 141:34]
          else : @[Router.scala 143:41]
            node _T_15 = lt(_T_12, io.x) @[Router.scala 143:33]
            when _T_15 : @[Router.scala 143:41]
              io.out_L.write <= UInt<1>("h01") @[Router.scala 144:24]
              skip @[Router.scala 143:41]
            else : @[Router.scala 145:20]
              node _T_16 = gt(_T_13, io.y) @[Router.scala 146:29]
              when _T_16 : @[Router.scala 146:37]
                io.out_D.write <= UInt<1>("h01") @[Router.scala 147:26]
                skip @[Router.scala 146:37]
              else : @[Router.scala 148:43]
                node _T_17 = lt(_T_13, io.y) @[Router.scala 148:35]
                when _T_17 : @[Router.scala 148:43]
                  io.out_U.write <= UInt<1>("h01") @[Router.scala 149:26]
                  skip @[Router.scala 148:43]
                else : @[Router.scala 150:21]
                  io.out_CPU.write <= UInt<1>("h01") @[Router.scala 151:28]
                  skip @[Router.scala 150:21]
              skip @[Router.scala 145:20]
          when io.out_D.write : @[Router.scala 154:27]
            io.out_D.dout <= dataReg_L @[Router.scala 155:23]
            skip @[Router.scala 154:27]
          else : @[Router.scala 156:33]
            when io.out_U.write : @[Router.scala 156:33]
              io.out_U.dout <= dataReg_L @[Router.scala 157:23]
              skip @[Router.scala 156:33]
            else : @[Router.scala 158:34]
              when io.out_R.write : @[Router.scala 158:34]
                io.out_R.dout <= dataReg_L @[Router.scala 159:23]
                skip @[Router.scala 158:34]
              else : @[Router.scala 160:36]
                when io.out_CPU.write : @[Router.scala 160:36]
                  io.out_CPU.dout <= dataReg_CPU @[Router.scala 161:25]
                  skip @[Router.scala 160:36]
          skip @[Router.scala 136:30]
        else : @[Router.scala 166:30]
          when io.in_R.read : @[Router.scala 166:30]
            dataReg_R <= io.in_R.din @[Router.scala 167:17]
            node _T_18 = bits(dataReg_R, 31, 30) @[Router.scala 168:36]
            node _T_19 = bits(dataReg_R, 29, 28) @[Router.scala 169:36]
            node _T_20 = gt(_T_18, io.x) @[Router.scala 171:26]
            when _T_20 : @[Router.scala 171:34]
              io.out_R.write <= UInt<1>("h01") @[Router.scala 172:24]
              skip @[Router.scala 171:34]
            else : @[Router.scala 173:41]
              node _T_21 = lt(_T_18, io.x) @[Router.scala 173:33]
              when _T_21 : @[Router.scala 173:41]
                io.out_L.write <= UInt<1>("h01") @[Router.scala 174:24]
                skip @[Router.scala 173:41]
              else : @[Router.scala 175:20]
                node _T_22 = gt(_T_19, io.y) @[Router.scala 176:29]
                when _T_22 : @[Router.scala 176:37]
                  io.out_D.write <= UInt<1>("h01") @[Router.scala 177:26]
                  skip @[Router.scala 176:37]
                else : @[Router.scala 178:43]
                  node _T_23 = lt(_T_19, io.y) @[Router.scala 178:35]
                  when _T_23 : @[Router.scala 178:43]
                    io.out_U.write <= UInt<1>("h01") @[Router.scala 179:26]
                    skip @[Router.scala 178:43]
                  else : @[Router.scala 180:22]
                    io.out_CPU.write <= UInt<1>("h01") @[Router.scala 181:28]
                    skip @[Router.scala 180:22]
                skip @[Router.scala 175:20]
            when io.out_D.write : @[Router.scala 184:27]
              io.out_D.dout <= dataReg_R @[Router.scala 185:23]
              skip @[Router.scala 184:27]
            else : @[Router.scala 186:33]
              when io.out_L.write : @[Router.scala 186:33]
                io.out_L.dout <= dataReg_R @[Router.scala 187:23]
                skip @[Router.scala 186:33]
              else : @[Router.scala 188:34]
                when io.out_U.write : @[Router.scala 188:34]
                  io.out_U.dout <= dataReg_R @[Router.scala 189:23]
                  skip @[Router.scala 188:34]
                else : @[Router.scala 190:36]
                  when io.out_CPU.write : @[Router.scala 190:36]
                    io.out_CPU.dout <= dataReg_CPU @[Router.scala 191:25]
                    skip @[Router.scala 190:36]
            skip @[Router.scala 166:30]
          else : @[Router.scala 196:32]
            when io.in_CPU.read : @[Router.scala 196:32]
              dataReg_CPU <= io.in_CPU.din @[Router.scala 197:19]
              node _T_24 = bits(dataReg_CPU, 31, 30) @[Router.scala 198:38]
              node _T_25 = bits(dataReg_CPU, 29, 28) @[Router.scala 199:38]
              node _T_26 = gt(_T_24, io.x) @[Router.scala 201:26]
              when _T_26 : @[Router.scala 201:34]
                io.out_R.write <= UInt<1>("h01") @[Router.scala 202:24]
                skip @[Router.scala 201:34]
              else : @[Router.scala 203:41]
                node _T_27 = lt(_T_24, io.x) @[Router.scala 203:33]
                when _T_27 : @[Router.scala 203:41]
                  io.out_L.write <= UInt<1>("h01") @[Router.scala 204:24]
                  skip @[Router.scala 203:41]
                else : @[Router.scala 205:20]
                  node _T_28 = gt(_T_25, io.y) @[Router.scala 206:29]
                  when _T_28 : @[Router.scala 206:37]
                    io.out_D.write <= UInt<1>("h01") @[Router.scala 207:26]
                    skip @[Router.scala 206:37]
                  else : @[Router.scala 208:43]
                    node _T_29 = lt(_T_25, io.y) @[Router.scala 208:35]
                    when _T_29 : @[Router.scala 208:43]
                      io.out_U.write <= UInt<1>("h01") @[Router.scala 209:26]
                      skip @[Router.scala 208:43]
                    else : @[Router.scala 210:22]
                      io.out_CPU.write <= UInt<1>("h01") @[Router.scala 211:28]
                      skip @[Router.scala 210:22]
                  skip @[Router.scala 205:20]
              when io.out_D.write : @[Router.scala 214:27]
                io.out_D.dout <= dataReg_CPU @[Router.scala 215:23]
                skip @[Router.scala 214:27]
              else : @[Router.scala 216:33]
                when io.out_L.write : @[Router.scala 216:33]
                  io.out_L.dout <= dataReg_CPU @[Router.scala 217:23]
                  skip @[Router.scala 216:33]
                else : @[Router.scala 218:34]
                  when io.out_U.write : @[Router.scala 218:34]
                    io.out_U.dout <= dataReg_CPU @[Router.scala 219:23]
                    skip @[Router.scala 218:34]
                  else : @[Router.scala 220:36]
                    when io.out_CPU.write : @[Router.scala 220:36]
                      io.out_CPU.dout <= dataReg_CPU @[Router.scala 221:25]
                      skip @[Router.scala 220:36]
              skip @[Router.scala 196:32]
    
  module Router_2 : 
    input clock : Clock
    input reset : Reset
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<32>}, in_D : {flip read : UInt<1>, flip din : UInt<32>}, in_L : {flip read : UInt<1>, flip din : UInt<32>}, in_R : {flip read : UInt<1>, flip din : UInt<32>}, in_CPU : {flip read : UInt<1>, flip din : UInt<32>}, out_U : {write : UInt<1>, dout : UInt<32>}, out_D : {write : UInt<1>, dout : UInt<32>}, out_L : {write : UInt<1>, dout : UInt<32>}, out_R : {write : UInt<1>, dout : UInt<32>}, out_CPU : {write : UInt<1>, dout : UInt<32>}, flip x : UInt<2>, flip y : UInt<2>}
    
    reg som : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 44:20]
    wire out_U_dout : UInt<32>
    out_U_dout <= UInt<32>("h00")
    wire out_D_dout : UInt<32>
    out_D_dout <= UInt<32>("h00")
    wire out_L_dout : UInt<32>
    out_L_dout <= UInt<32>("h00")
    wire out_R_dout : UInt<32>
    out_R_dout <= UInt<32>("h00")
    wire out_CPU_dout : UInt<32>
    out_CPU_dout <= UInt<32>("h00")
    io.out_U.dout <= out_U_dout @[Router.scala 52:17]
    io.out_D.dout <= out_D_dout @[Router.scala 53:17]
    io.out_L.dout <= out_L_dout @[Router.scala 54:17]
    io.out_R.dout <= out_R_dout @[Router.scala 55:17]
    io.out_CPU.dout <= out_CPU_dout @[Router.scala 56:19]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 58:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 59:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 60:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 61:18]
    io.out_CPU.write <= UInt<1>("h00") @[Router.scala 62:20]
    wire dataReg : UInt<1>
    dataReg <= UInt<1>("h00")
    reg dataReg_U : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 68:26]
    reg dataReg_D : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 69:26]
    reg dataReg_L : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 70:26]
    reg dataReg_R : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 71:26]
    reg dataReg_CPU : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 72:28]
    when io.in_U.read : @[Router.scala 75:25]
      dataReg_U <= io.in_U.din @[Router.scala 76:17]
      node _T = bits(dataReg_U, 1, 0) @[Router.scala 77:36]
      node _T_1 = bits(dataReg_U, 3, 2) @[Router.scala 78:36]
      node _T_2 = gt(_T, io.x) @[Router.scala 80:26]
      when _T_2 : @[Router.scala 80:34]
        io.out_R.write <= UInt<1>("h01") @[Router.scala 81:24]
        skip @[Router.scala 80:34]
      else : @[Router.scala 82:41]
        node _T_3 = lt(_T, io.x) @[Router.scala 82:33]
        when _T_3 : @[Router.scala 82:41]
          io.out_L.write <= UInt<1>("h01") @[Router.scala 83:24]
          skip @[Router.scala 82:41]
        else : @[Router.scala 84:20]
          node _T_4 = gt(_T_1, io.y) @[Router.scala 85:29]
          when _T_4 : @[Router.scala 85:37]
            io.out_D.write <= UInt<1>("h01") @[Router.scala 86:26]
            skip @[Router.scala 85:37]
          else : @[Router.scala 87:43]
            node _T_5 = lt(_T_1, io.y) @[Router.scala 87:35]
            when _T_5 : @[Router.scala 87:43]
              io.out_U.write <= UInt<1>("h01") @[Router.scala 88:26]
              skip @[Router.scala 87:43]
            else : @[Router.scala 89:22]
              io.out_CPU.write <= UInt<1>("h01") @[Router.scala 90:28]
              skip @[Router.scala 89:22]
          skip @[Router.scala 84:20]
      when io.out_D.write : @[Router.scala 94:27]
        io.out_D.dout <= dataReg_U @[Router.scala 95:23]
        skip @[Router.scala 94:27]
      else : @[Router.scala 96:33]
        when io.out_L.write : @[Router.scala 96:33]
          io.out_L.dout <= dataReg_U @[Router.scala 97:23]
          skip @[Router.scala 96:33]
        else : @[Router.scala 98:34]
          when io.out_R.write : @[Router.scala 98:34]
            io.out_R.dout <= dataReg_U @[Router.scala 99:23]
            skip @[Router.scala 98:34]
          else : @[Router.scala 100:36]
            when io.out_CPU.write : @[Router.scala 100:36]
              io.out_CPU.dout <= dataReg_CPU @[Router.scala 101:25]
              skip @[Router.scala 100:36]
      skip @[Router.scala 75:25]
    else : @[Router.scala 106:31]
      when io.in_D.read : @[Router.scala 106:31]
        dataReg_D <= io.in_D.din @[Router.scala 107:17]
        node _T_6 = bits(dataReg_D, 31, 30) @[Router.scala 108:36]
        node _T_7 = bits(dataReg_D, 29, 28) @[Router.scala 109:36]
        node _T_8 = gt(_T_6, io.x) @[Router.scala 110:26]
        when _T_8 : @[Router.scala 110:34]
          io.out_R.write <= UInt<1>("h01") @[Router.scala 111:24]
          skip @[Router.scala 110:34]
        else : @[Router.scala 112:41]
          node _T_9 = lt(_T_6, io.x) @[Router.scala 112:33]
          when _T_9 : @[Router.scala 112:41]
            io.out_L.write <= UInt<1>("h01") @[Router.scala 113:24]
            skip @[Router.scala 112:41]
          else : @[Router.scala 114:20]
            node _T_10 = gt(_T_7, io.y) @[Router.scala 115:29]
            when _T_10 : @[Router.scala 115:37]
              io.out_D.write <= UInt<1>("h01") @[Router.scala 116:26]
              skip @[Router.scala 115:37]
            else : @[Router.scala 117:43]
              node _T_11 = lt(_T_7, io.y) @[Router.scala 117:35]
              when _T_11 : @[Router.scala 117:43]
                io.out_U.write <= UInt<1>("h01") @[Router.scala 118:26]
                skip @[Router.scala 117:43]
              else : @[Router.scala 119:21]
                io.out_CPU.write <= UInt<1>("h01") @[Router.scala 120:28]
                skip @[Router.scala 119:21]
            skip @[Router.scala 114:20]
        when io.out_U.write : @[Router.scala 124:27]
          io.out_U.dout <= dataReg_D @[Router.scala 125:23]
          skip @[Router.scala 124:27]
        else : @[Router.scala 126:33]
          when io.out_L.write : @[Router.scala 126:33]
            io.out_L.dout <= dataReg_D @[Router.scala 127:23]
            skip @[Router.scala 126:33]
          else : @[Router.scala 128:34]
            when io.out_R.write : @[Router.scala 128:34]
              io.out_R.dout <= dataReg_D @[Router.scala 129:23]
              skip @[Router.scala 128:34]
            else : @[Router.scala 130:36]
              when io.out_CPU.write : @[Router.scala 130:36]
                io.out_CPU.dout <= dataReg_CPU @[Router.scala 131:25]
                skip @[Router.scala 130:36]
        skip @[Router.scala 106:31]
      else : @[Router.scala 136:30]
        when io.in_L.read : @[Router.scala 136:30]
          dataReg_L <= io.in_L.din @[Router.scala 137:17]
          node _T_12 = bits(dataReg_L, 31, 30) @[Router.scala 138:36]
          node _T_13 = bits(dataReg_L, 29, 28) @[Router.scala 139:36]
          node _T_14 = gt(_T_12, io.x) @[Router.scala 141:26]
          when _T_14 : @[Router.scala 141:34]
            io.out_R.write <= UInt<1>("h01") @[Router.scala 142:24]
            skip @[Router.scala 141:34]
          else : @[Router.scala 143:41]
            node _T_15 = lt(_T_12, io.x) @[Router.scala 143:33]
            when _T_15 : @[Router.scala 143:41]
              io.out_L.write <= UInt<1>("h01") @[Router.scala 144:24]
              skip @[Router.scala 143:41]
            else : @[Router.scala 145:20]
              node _T_16 = gt(_T_13, io.y) @[Router.scala 146:29]
              when _T_16 : @[Router.scala 146:37]
                io.out_D.write <= UInt<1>("h01") @[Router.scala 147:26]
                skip @[Router.scala 146:37]
              else : @[Router.scala 148:43]
                node _T_17 = lt(_T_13, io.y) @[Router.scala 148:35]
                when _T_17 : @[Router.scala 148:43]
                  io.out_U.write <= UInt<1>("h01") @[Router.scala 149:26]
                  skip @[Router.scala 148:43]
                else : @[Router.scala 150:21]
                  io.out_CPU.write <= UInt<1>("h01") @[Router.scala 151:28]
                  skip @[Router.scala 150:21]
              skip @[Router.scala 145:20]
          when io.out_D.write : @[Router.scala 154:27]
            io.out_D.dout <= dataReg_L @[Router.scala 155:23]
            skip @[Router.scala 154:27]
          else : @[Router.scala 156:33]
            when io.out_U.write : @[Router.scala 156:33]
              io.out_U.dout <= dataReg_L @[Router.scala 157:23]
              skip @[Router.scala 156:33]
            else : @[Router.scala 158:34]
              when io.out_R.write : @[Router.scala 158:34]
                io.out_R.dout <= dataReg_L @[Router.scala 159:23]
                skip @[Router.scala 158:34]
              else : @[Router.scala 160:36]
                when io.out_CPU.write : @[Router.scala 160:36]
                  io.out_CPU.dout <= dataReg_CPU @[Router.scala 161:25]
                  skip @[Router.scala 160:36]
          skip @[Router.scala 136:30]
        else : @[Router.scala 166:30]
          when io.in_R.read : @[Router.scala 166:30]
            dataReg_R <= io.in_R.din @[Router.scala 167:17]
            node _T_18 = bits(dataReg_R, 31, 30) @[Router.scala 168:36]
            node _T_19 = bits(dataReg_R, 29, 28) @[Router.scala 169:36]
            node _T_20 = gt(_T_18, io.x) @[Router.scala 171:26]
            when _T_20 : @[Router.scala 171:34]
              io.out_R.write <= UInt<1>("h01") @[Router.scala 172:24]
              skip @[Router.scala 171:34]
            else : @[Router.scala 173:41]
              node _T_21 = lt(_T_18, io.x) @[Router.scala 173:33]
              when _T_21 : @[Router.scala 173:41]
                io.out_L.write <= UInt<1>("h01") @[Router.scala 174:24]
                skip @[Router.scala 173:41]
              else : @[Router.scala 175:20]
                node _T_22 = gt(_T_19, io.y) @[Router.scala 176:29]
                when _T_22 : @[Router.scala 176:37]
                  io.out_D.write <= UInt<1>("h01") @[Router.scala 177:26]
                  skip @[Router.scala 176:37]
                else : @[Router.scala 178:43]
                  node _T_23 = lt(_T_19, io.y) @[Router.scala 178:35]
                  when _T_23 : @[Router.scala 178:43]
                    io.out_U.write <= UInt<1>("h01") @[Router.scala 179:26]
                    skip @[Router.scala 178:43]
                  else : @[Router.scala 180:22]
                    io.out_CPU.write <= UInt<1>("h01") @[Router.scala 181:28]
                    skip @[Router.scala 180:22]
                skip @[Router.scala 175:20]
            when io.out_D.write : @[Router.scala 184:27]
              io.out_D.dout <= dataReg_R @[Router.scala 185:23]
              skip @[Router.scala 184:27]
            else : @[Router.scala 186:33]
              when io.out_L.write : @[Router.scala 186:33]
                io.out_L.dout <= dataReg_R @[Router.scala 187:23]
                skip @[Router.scala 186:33]
              else : @[Router.scala 188:34]
                when io.out_U.write : @[Router.scala 188:34]
                  io.out_U.dout <= dataReg_R @[Router.scala 189:23]
                  skip @[Router.scala 188:34]
                else : @[Router.scala 190:36]
                  when io.out_CPU.write : @[Router.scala 190:36]
                    io.out_CPU.dout <= dataReg_CPU @[Router.scala 191:25]
                    skip @[Router.scala 190:36]
            skip @[Router.scala 166:30]
          else : @[Router.scala 196:32]
            when io.in_CPU.read : @[Router.scala 196:32]
              dataReg_CPU <= io.in_CPU.din @[Router.scala 197:19]
              node _T_24 = bits(dataReg_CPU, 31, 30) @[Router.scala 198:38]
              node _T_25 = bits(dataReg_CPU, 29, 28) @[Router.scala 199:38]
              node _T_26 = gt(_T_24, io.x) @[Router.scala 201:26]
              when _T_26 : @[Router.scala 201:34]
                io.out_R.write <= UInt<1>("h01") @[Router.scala 202:24]
                skip @[Router.scala 201:34]
              else : @[Router.scala 203:41]
                node _T_27 = lt(_T_24, io.x) @[Router.scala 203:33]
                when _T_27 : @[Router.scala 203:41]
                  io.out_L.write <= UInt<1>("h01") @[Router.scala 204:24]
                  skip @[Router.scala 203:41]
                else : @[Router.scala 205:20]
                  node _T_28 = gt(_T_25, io.y) @[Router.scala 206:29]
                  when _T_28 : @[Router.scala 206:37]
                    io.out_D.write <= UInt<1>("h01") @[Router.scala 207:26]
                    skip @[Router.scala 206:37]
                  else : @[Router.scala 208:43]
                    node _T_29 = lt(_T_25, io.y) @[Router.scala 208:35]
                    when _T_29 : @[Router.scala 208:43]
                      io.out_U.write <= UInt<1>("h01") @[Router.scala 209:26]
                      skip @[Router.scala 208:43]
                    else : @[Router.scala 210:22]
                      io.out_CPU.write <= UInt<1>("h01") @[Router.scala 211:28]
                      skip @[Router.scala 210:22]
                  skip @[Router.scala 205:20]
              when io.out_D.write : @[Router.scala 214:27]
                io.out_D.dout <= dataReg_CPU @[Router.scala 215:23]
                skip @[Router.scala 214:27]
              else : @[Router.scala 216:33]
                when io.out_L.write : @[Router.scala 216:33]
                  io.out_L.dout <= dataReg_CPU @[Router.scala 217:23]
                  skip @[Router.scala 216:33]
                else : @[Router.scala 218:34]
                  when io.out_U.write : @[Router.scala 218:34]
                    io.out_U.dout <= dataReg_CPU @[Router.scala 219:23]
                    skip @[Router.scala 218:34]
                  else : @[Router.scala 220:36]
                    when io.out_CPU.write : @[Router.scala 220:36]
                      io.out_CPU.dout <= dataReg_CPU @[Router.scala 221:25]
                      skip @[Router.scala 220:36]
              skip @[Router.scala 196:32]
    
  module Router_3 : 
    input clock : Clock
    input reset : Reset
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<32>}, in_D : {flip read : UInt<1>, flip din : UInt<32>}, in_L : {flip read : UInt<1>, flip din : UInt<32>}, in_R : {flip read : UInt<1>, flip din : UInt<32>}, in_CPU : {flip read : UInt<1>, flip din : UInt<32>}, out_U : {write : UInt<1>, dout : UInt<32>}, out_D : {write : UInt<1>, dout : UInt<32>}, out_L : {write : UInt<1>, dout : UInt<32>}, out_R : {write : UInt<1>, dout : UInt<32>}, out_CPU : {write : UInt<1>, dout : UInt<32>}, flip x : UInt<2>, flip y : UInt<2>}
    
    reg som : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 44:20]
    wire out_U_dout : UInt<32>
    out_U_dout <= UInt<32>("h00")
    wire out_D_dout : UInt<32>
    out_D_dout <= UInt<32>("h00")
    wire out_L_dout : UInt<32>
    out_L_dout <= UInt<32>("h00")
    wire out_R_dout : UInt<32>
    out_R_dout <= UInt<32>("h00")
    wire out_CPU_dout : UInt<32>
    out_CPU_dout <= UInt<32>("h00")
    io.out_U.dout <= out_U_dout @[Router.scala 52:17]
    io.out_D.dout <= out_D_dout @[Router.scala 53:17]
    io.out_L.dout <= out_L_dout @[Router.scala 54:17]
    io.out_R.dout <= out_R_dout @[Router.scala 55:17]
    io.out_CPU.dout <= out_CPU_dout @[Router.scala 56:19]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 58:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 59:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 60:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 61:18]
    io.out_CPU.write <= UInt<1>("h00") @[Router.scala 62:20]
    wire dataReg : UInt<1>
    dataReg <= UInt<1>("h00")
    reg dataReg_U : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 68:26]
    reg dataReg_D : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 69:26]
    reg dataReg_L : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 70:26]
    reg dataReg_R : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 71:26]
    reg dataReg_CPU : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Router.scala 72:28]
    when io.in_U.read : @[Router.scala 75:25]
      dataReg_U <= io.in_U.din @[Router.scala 76:17]
      node _T = bits(dataReg_U, 1, 0) @[Router.scala 77:36]
      node _T_1 = bits(dataReg_U, 3, 2) @[Router.scala 78:36]
      node _T_2 = gt(_T, io.x) @[Router.scala 80:26]
      when _T_2 : @[Router.scala 80:34]
        io.out_R.write <= UInt<1>("h01") @[Router.scala 81:24]
        skip @[Router.scala 80:34]
      else : @[Router.scala 82:41]
        node _T_3 = lt(_T, io.x) @[Router.scala 82:33]
        when _T_3 : @[Router.scala 82:41]
          io.out_L.write <= UInt<1>("h01") @[Router.scala 83:24]
          skip @[Router.scala 82:41]
        else : @[Router.scala 84:20]
          node _T_4 = gt(_T_1, io.y) @[Router.scala 85:29]
          when _T_4 : @[Router.scala 85:37]
            io.out_D.write <= UInt<1>("h01") @[Router.scala 86:26]
            skip @[Router.scala 85:37]
          else : @[Router.scala 87:43]
            node _T_5 = lt(_T_1, io.y) @[Router.scala 87:35]
            when _T_5 : @[Router.scala 87:43]
              io.out_U.write <= UInt<1>("h01") @[Router.scala 88:26]
              skip @[Router.scala 87:43]
            else : @[Router.scala 89:22]
              io.out_CPU.write <= UInt<1>("h01") @[Router.scala 90:28]
              skip @[Router.scala 89:22]
          skip @[Router.scala 84:20]
      when io.out_D.write : @[Router.scala 94:27]
        io.out_D.dout <= dataReg_U @[Router.scala 95:23]
        skip @[Router.scala 94:27]
      else : @[Router.scala 96:33]
        when io.out_L.write : @[Router.scala 96:33]
          io.out_L.dout <= dataReg_U @[Router.scala 97:23]
          skip @[Router.scala 96:33]
        else : @[Router.scala 98:34]
          when io.out_R.write : @[Router.scala 98:34]
            io.out_R.dout <= dataReg_U @[Router.scala 99:23]
            skip @[Router.scala 98:34]
          else : @[Router.scala 100:36]
            when io.out_CPU.write : @[Router.scala 100:36]
              io.out_CPU.dout <= dataReg_CPU @[Router.scala 101:25]
              skip @[Router.scala 100:36]
      skip @[Router.scala 75:25]
    else : @[Router.scala 106:31]
      when io.in_D.read : @[Router.scala 106:31]
        dataReg_D <= io.in_D.din @[Router.scala 107:17]
        node _T_6 = bits(dataReg_D, 31, 30) @[Router.scala 108:36]
        node _T_7 = bits(dataReg_D, 29, 28) @[Router.scala 109:36]
        node _T_8 = gt(_T_6, io.x) @[Router.scala 110:26]
        when _T_8 : @[Router.scala 110:34]
          io.out_R.write <= UInt<1>("h01") @[Router.scala 111:24]
          skip @[Router.scala 110:34]
        else : @[Router.scala 112:41]
          node _T_9 = lt(_T_6, io.x) @[Router.scala 112:33]
          when _T_9 : @[Router.scala 112:41]
            io.out_L.write <= UInt<1>("h01") @[Router.scala 113:24]
            skip @[Router.scala 112:41]
          else : @[Router.scala 114:20]
            node _T_10 = gt(_T_7, io.y) @[Router.scala 115:29]
            when _T_10 : @[Router.scala 115:37]
              io.out_D.write <= UInt<1>("h01") @[Router.scala 116:26]
              skip @[Router.scala 115:37]
            else : @[Router.scala 117:43]
              node _T_11 = lt(_T_7, io.y) @[Router.scala 117:35]
              when _T_11 : @[Router.scala 117:43]
                io.out_U.write <= UInt<1>("h01") @[Router.scala 118:26]
                skip @[Router.scala 117:43]
              else : @[Router.scala 119:21]
                io.out_CPU.write <= UInt<1>("h01") @[Router.scala 120:28]
                skip @[Router.scala 119:21]
            skip @[Router.scala 114:20]
        when io.out_U.write : @[Router.scala 124:27]
          io.out_U.dout <= dataReg_D @[Router.scala 125:23]
          skip @[Router.scala 124:27]
        else : @[Router.scala 126:33]
          when io.out_L.write : @[Router.scala 126:33]
            io.out_L.dout <= dataReg_D @[Router.scala 127:23]
            skip @[Router.scala 126:33]
          else : @[Router.scala 128:34]
            when io.out_R.write : @[Router.scala 128:34]
              io.out_R.dout <= dataReg_D @[Router.scala 129:23]
              skip @[Router.scala 128:34]
            else : @[Router.scala 130:36]
              when io.out_CPU.write : @[Router.scala 130:36]
                io.out_CPU.dout <= dataReg_CPU @[Router.scala 131:25]
                skip @[Router.scala 130:36]
        skip @[Router.scala 106:31]
      else : @[Router.scala 136:30]
        when io.in_L.read : @[Router.scala 136:30]
          dataReg_L <= io.in_L.din @[Router.scala 137:17]
          node _T_12 = bits(dataReg_L, 31, 30) @[Router.scala 138:36]
          node _T_13 = bits(dataReg_L, 29, 28) @[Router.scala 139:36]
          node _T_14 = gt(_T_12, io.x) @[Router.scala 141:26]
          when _T_14 : @[Router.scala 141:34]
            io.out_R.write <= UInt<1>("h01") @[Router.scala 142:24]
            skip @[Router.scala 141:34]
          else : @[Router.scala 143:41]
            node _T_15 = lt(_T_12, io.x) @[Router.scala 143:33]
            when _T_15 : @[Router.scala 143:41]
              io.out_L.write <= UInt<1>("h01") @[Router.scala 144:24]
              skip @[Router.scala 143:41]
            else : @[Router.scala 145:20]
              node _T_16 = gt(_T_13, io.y) @[Router.scala 146:29]
              when _T_16 : @[Router.scala 146:37]
                io.out_D.write <= UInt<1>("h01") @[Router.scala 147:26]
                skip @[Router.scala 146:37]
              else : @[Router.scala 148:43]
                node _T_17 = lt(_T_13, io.y) @[Router.scala 148:35]
                when _T_17 : @[Router.scala 148:43]
                  io.out_U.write <= UInt<1>("h01") @[Router.scala 149:26]
                  skip @[Router.scala 148:43]
                else : @[Router.scala 150:21]
                  io.out_CPU.write <= UInt<1>("h01") @[Router.scala 151:28]
                  skip @[Router.scala 150:21]
              skip @[Router.scala 145:20]
          when io.out_D.write : @[Router.scala 154:27]
            io.out_D.dout <= dataReg_L @[Router.scala 155:23]
            skip @[Router.scala 154:27]
          else : @[Router.scala 156:33]
            when io.out_U.write : @[Router.scala 156:33]
              io.out_U.dout <= dataReg_L @[Router.scala 157:23]
              skip @[Router.scala 156:33]
            else : @[Router.scala 158:34]
              when io.out_R.write : @[Router.scala 158:34]
                io.out_R.dout <= dataReg_L @[Router.scala 159:23]
                skip @[Router.scala 158:34]
              else : @[Router.scala 160:36]
                when io.out_CPU.write : @[Router.scala 160:36]
                  io.out_CPU.dout <= dataReg_CPU @[Router.scala 161:25]
                  skip @[Router.scala 160:36]
          skip @[Router.scala 136:30]
        else : @[Router.scala 166:30]
          when io.in_R.read : @[Router.scala 166:30]
            dataReg_R <= io.in_R.din @[Router.scala 167:17]
            node _T_18 = bits(dataReg_R, 31, 30) @[Router.scala 168:36]
            node _T_19 = bits(dataReg_R, 29, 28) @[Router.scala 169:36]
            node _T_20 = gt(_T_18, io.x) @[Router.scala 171:26]
            when _T_20 : @[Router.scala 171:34]
              io.out_R.write <= UInt<1>("h01") @[Router.scala 172:24]
              skip @[Router.scala 171:34]
            else : @[Router.scala 173:41]
              node _T_21 = lt(_T_18, io.x) @[Router.scala 173:33]
              when _T_21 : @[Router.scala 173:41]
                io.out_L.write <= UInt<1>("h01") @[Router.scala 174:24]
                skip @[Router.scala 173:41]
              else : @[Router.scala 175:20]
                node _T_22 = gt(_T_19, io.y) @[Router.scala 176:29]
                when _T_22 : @[Router.scala 176:37]
                  io.out_D.write <= UInt<1>("h01") @[Router.scala 177:26]
                  skip @[Router.scala 176:37]
                else : @[Router.scala 178:43]
                  node _T_23 = lt(_T_19, io.y) @[Router.scala 178:35]
                  when _T_23 : @[Router.scala 178:43]
                    io.out_U.write <= UInt<1>("h01") @[Router.scala 179:26]
                    skip @[Router.scala 178:43]
                  else : @[Router.scala 180:22]
                    io.out_CPU.write <= UInt<1>("h01") @[Router.scala 181:28]
                    skip @[Router.scala 180:22]
                skip @[Router.scala 175:20]
            when io.out_D.write : @[Router.scala 184:27]
              io.out_D.dout <= dataReg_R @[Router.scala 185:23]
              skip @[Router.scala 184:27]
            else : @[Router.scala 186:33]
              when io.out_L.write : @[Router.scala 186:33]
                io.out_L.dout <= dataReg_R @[Router.scala 187:23]
                skip @[Router.scala 186:33]
              else : @[Router.scala 188:34]
                when io.out_U.write : @[Router.scala 188:34]
                  io.out_U.dout <= dataReg_R @[Router.scala 189:23]
                  skip @[Router.scala 188:34]
                else : @[Router.scala 190:36]
                  when io.out_CPU.write : @[Router.scala 190:36]
                    io.out_CPU.dout <= dataReg_CPU @[Router.scala 191:25]
                    skip @[Router.scala 190:36]
            skip @[Router.scala 166:30]
          else : @[Router.scala 196:32]
            when io.in_CPU.read : @[Router.scala 196:32]
              dataReg_CPU <= io.in_CPU.din @[Router.scala 197:19]
              node _T_24 = bits(dataReg_CPU, 31, 30) @[Router.scala 198:38]
              node _T_25 = bits(dataReg_CPU, 29, 28) @[Router.scala 199:38]
              node _T_26 = gt(_T_24, io.x) @[Router.scala 201:26]
              when _T_26 : @[Router.scala 201:34]
                io.out_R.write <= UInt<1>("h01") @[Router.scala 202:24]
                skip @[Router.scala 201:34]
              else : @[Router.scala 203:41]
                node _T_27 = lt(_T_24, io.x) @[Router.scala 203:33]
                when _T_27 : @[Router.scala 203:41]
                  io.out_L.write <= UInt<1>("h01") @[Router.scala 204:24]
                  skip @[Router.scala 203:41]
                else : @[Router.scala 205:20]
                  node _T_28 = gt(_T_25, io.y) @[Router.scala 206:29]
                  when _T_28 : @[Router.scala 206:37]
                    io.out_D.write <= UInt<1>("h01") @[Router.scala 207:26]
                    skip @[Router.scala 206:37]
                  else : @[Router.scala 208:43]
                    node _T_29 = lt(_T_25, io.y) @[Router.scala 208:35]
                    when _T_29 : @[Router.scala 208:43]
                      io.out_U.write <= UInt<1>("h01") @[Router.scala 209:26]
                      skip @[Router.scala 208:43]
                    else : @[Router.scala 210:22]
                      io.out_CPU.write <= UInt<1>("h01") @[Router.scala 211:28]
                      skip @[Router.scala 210:22]
                  skip @[Router.scala 205:20]
              when io.out_D.write : @[Router.scala 214:27]
                io.out_D.dout <= dataReg_CPU @[Router.scala 215:23]
                skip @[Router.scala 214:27]
              else : @[Router.scala 216:33]
                when io.out_L.write : @[Router.scala 216:33]
                  io.out_L.dout <= dataReg_CPU @[Router.scala 217:23]
                  skip @[Router.scala 216:33]
                else : @[Router.scala 218:34]
                  when io.out_U.write : @[Router.scala 218:34]
                    io.out_U.dout <= dataReg_CPU @[Router.scala 219:23]
                    skip @[Router.scala 218:34]
                  else : @[Router.scala 220:36]
                    when io.out_CPU.write : @[Router.scala 220:36]
                      io.out_CPU.dout <= dataReg_CPU @[Router.scala 221:25]
                      skip @[Router.scala 220:36]
              skip @[Router.scala 196:32]
    
  module noc : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    wire som : UInt<32>
    som <= UInt<32>("h00")
    inst router1 of Router @[noc.scala 15:23]
    router1.clock <= clock
    router1.reset <= reset
    inst router2 of Router_1 @[noc.scala 16:23]
    router2.clock <= clock
    router2.reset <= reset
    inst router3 of Router_2 @[noc.scala 17:23]
    router3.clock <= clock
    router3.reset <= reset
    inst router4 of Router_3 @[noc.scala 18:23]
    router4.clock <= clock
    router4.reset <= reset
    router1.io.x <= UInt<1>("h00") @[noc.scala 20:16]
    router1.io.y <= UInt<1>("h00") @[noc.scala 21:16]
    router2.io.x <= UInt<1>("h00") @[noc.scala 23:16]
    router2.io.y <= UInt<1>("h01") @[noc.scala 24:16]
    router3.io.x <= UInt<1>("h01") @[noc.scala 26:16]
    router3.io.y <= UInt<1>("h00") @[noc.scala 27:16]
    router4.io.x <= UInt<1>("h01") @[noc.scala 29:16]
    router4.io.y <= UInt<1>("h01") @[noc.scala 30:16]
    router1.io.in_U.din <= router3.io.out_D.dout @[noc.scala 32:23]
    router1.io.in_D.din <= router3.io.out_U.dout @[noc.scala 33:23]
    router1.io.in_L.din <= router2.io.out_R.dout @[noc.scala 34:23]
    router1.io.in_R.din <= router2.io.out_L.dout @[noc.scala 35:23]
    router2.io.in_U.din <= router4.io.out_D.dout @[noc.scala 37:23]
    router2.io.in_D.din <= router4.io.out_U.dout @[noc.scala 38:23]
    router2.io.in_L.din <= router1.io.out_R.dout @[noc.scala 39:23]
    router2.io.in_R.din <= router1.io.out_L.dout @[noc.scala 40:23]
    router3.io.in_U.din <= router1.io.out_D.dout @[noc.scala 42:23]
    router3.io.in_D.din <= router1.io.out_U.dout @[noc.scala 43:23]
    router3.io.in_L.din <= router4.io.out_R.dout @[noc.scala 44:23]
    router3.io.in_R.din <= router4.io.out_L.dout @[noc.scala 45:23]
    router4.io.in_U.din <= router2.io.out_D.dout @[noc.scala 47:23]
    router4.io.in_D.din <= router2.io.out_U.dout @[noc.scala 48:23]
    router4.io.in_L.din <= router3.io.out_R.dout @[noc.scala 49:23]
    router4.io.in_R.din <= router3.io.out_L.dout @[noc.scala 50:23]
    router1.io.in_U.read <= router3.io.out_D.write @[noc.scala 55:24]
    router1.io.in_D.read <= router3.io.out_U.write @[noc.scala 56:24]
    router1.io.in_L.read <= router2.io.out_R.write @[noc.scala 57:24]
    router1.io.in_R.read <= router2.io.out_L.write @[noc.scala 58:24]
    router2.io.in_U.read <= router4.io.out_D.write @[noc.scala 60:24]
    router2.io.in_D.read <= router4.io.out_U.write @[noc.scala 61:24]
    router2.io.in_L.read <= router1.io.out_R.write @[noc.scala 62:24]
    router2.io.in_R.read <= router1.io.out_L.write @[noc.scala 63:24]
    router3.io.in_U.read <= router1.io.out_D.write @[noc.scala 65:24]
    router3.io.in_D.read <= router1.io.out_U.write @[noc.scala 66:24]
    router3.io.in_L.read <= router4.io.out_R.write @[noc.scala 67:24]
    router3.io.in_R.read <= router4.io.out_L.write @[noc.scala 68:24]
    router4.io.in_U.read <= router2.io.out_D.write @[noc.scala 70:24]
    router4.io.in_D.read <= router2.io.out_U.write @[noc.scala 71:24]
    router4.io.in_L.read <= router3.io.out_R.write @[noc.scala 72:24]
    router4.io.in_R.read <= router3.io.out_L.write @[noc.scala 73:24]
    router1.io.in_CPU.din <= som @[noc.scala 76:25]
    router1.io.in_CPU.read <= som @[noc.scala 77:26]
    router2.io.in_CPU.din <= som @[noc.scala 78:25]
    router2.io.in_CPU.read <= som @[noc.scala 79:26]
    router3.io.in_CPU.din <= som @[noc.scala 80:25]
    router3.io.in_CPU.read <= som @[noc.scala 81:26]
    router4.io.in_CPU.din <= som @[noc.scala 82:25]
    router4.io.in_CPU.read <= som @[noc.scala 83:26]
    
