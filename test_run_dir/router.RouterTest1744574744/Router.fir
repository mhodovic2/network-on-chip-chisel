;buildInfoPackage: chisel3, version: 3.2.2, scalaVersion: 2.11.12, sbtVersion: 1.3.2
circuit Router : 
  module Router : 
    input clock : Clock
    input reset : UInt<1>
    output io : {in_U : {flip read : UInt<1>, flip din : UInt<5>}, in_D : {flip read : UInt<1>, flip din : UInt<5>}, in_L : {flip read : UInt<1>, flip din : UInt<5>}, in_R : {flip read : UInt<1>, flip din : UInt<5>}, out_U : {write : UInt<1>, dout : UInt<5>}, out_D : {write : UInt<1>, dout : UInt<5>}, out_L : {write : UInt<1>, dout : UInt<5>}, out_R : {write : UInt<1>, dout : UInt<5>}}
    
    reg upReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Router.scala 37:22]
    io.out_U.write <= UInt<1>("h00") @[Router.scala 39:18]
    io.out_D.write <= UInt<1>("h00") @[Router.scala 40:18]
    io.out_L.write <= UInt<1>("h00") @[Router.scala 41:18]
    io.out_R.write <= UInt<1>("h00") @[Router.scala 42:18]
    reg dataReg_U : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Router.scala 44:26]
    reg dataReg_D : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Router.scala 45:26]
    reg dataReg_L : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Router.scala 46:26]
    reg dataReg_R : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Router.scala 47:26]
    node _T = bits(reset, 0, 0) @[Router.scala 49:9]
    node _T_1 = eq(_T, UInt<1>("h00")) @[Router.scala 49:9]
    when _T_1 : @[Router.scala 49:9]
      printf(clock, UInt<1>(1), "data reg U = %d\n", dataReg_U) @[Router.scala 49:9]
      skip @[Router.scala 49:9]
    node _T_2 = bits(reset, 0, 0) @[Router.scala 50:9]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[Router.scala 50:9]
    when _T_3 : @[Router.scala 50:9]
      printf(clock, UInt<1>(1), "data reg D = %d\n", dataReg_D) @[Router.scala 50:9]
      skip @[Router.scala 50:9]
    node _T_4 = bits(reset, 0, 0) @[Router.scala 51:9]
    node _T_5 = eq(_T_4, UInt<1>("h00")) @[Router.scala 51:9]
    when _T_5 : @[Router.scala 51:9]
      printf(clock, UInt<1>(1), "data reg L = %d\n", dataReg_L) @[Router.scala 51:9]
      skip @[Router.scala 51:9]
    node _T_6 = bits(reset, 0, 0) @[Router.scala 52:9]
    node _T_7 = eq(_T_6, UInt<1>("h00")) @[Router.scala 52:9]
    when _T_7 : @[Router.scala 52:9]
      printf(clock, UInt<1>(1), "data reg R = %d\n", dataReg_R) @[Router.scala 52:9]
      skip @[Router.scala 52:9]
    io.out_U.dout <= dataReg_U @[Router.scala 54:17]
    io.out_D.dout <= dataReg_D @[Router.scala 55:17]
    io.out_L.dout <= dataReg_L @[Router.scala 56:17]
    io.out_R.dout <= dataReg_R @[Router.scala 57:17]
    when io.in_U.read : @[Router.scala 59:23]
      node _T_8 = bits(reset, 0, 0) @[Router.scala 60:11]
      node _T_9 = eq(_T_8, UInt<1>("h00")) @[Router.scala 60:11]
      when _T_9 : @[Router.scala 60:11]
        printf(clock, UInt<1>(1), "in U din = %d\n", io.in_U.din) @[Router.scala 60:11]
        skip @[Router.scala 60:11]
      node _T_10 = bits(reset, 0, 0) @[Router.scala 61:11]
      node _T_11 = eq(_T_10, UInt<1>("h00")) @[Router.scala 61:11]
      when _T_11 : @[Router.scala 61:11]
        printf(clock, UInt<1>(1), "in U dout 1 = %d\n", io.out_U.dout) @[Router.scala 61:11]
        skip @[Router.scala 61:11]
      dataReg_U <= io.in_U.din @[Router.scala 62:15]
      node _T_12 = bits(reset, 0, 0) @[Router.scala 63:11]
      node _T_13 = eq(_T_12, UInt<1>("h00")) @[Router.scala 63:11]
      when _T_13 : @[Router.scala 63:11]
        printf(clock, UInt<1>(1), "data reg U = %d\n", dataReg_U) @[Router.scala 63:11]
        skip @[Router.scala 63:11]
      io.out_R.write <= UInt<1>("h01") @[Router.scala 64:20]
      node _T_14 = bits(reset, 0, 0) @[Router.scala 65:11]
      node _T_15 = eq(_T_14, UInt<1>("h00")) @[Router.scala 65:11]
      when _T_15 : @[Router.scala 65:11]
        printf(clock, UInt<1>(1), "U_R = %d\n", io.in_U.read) @[Router.scala 65:11]
        skip @[Router.scala 65:11]
      node _T_16 = bits(reset, 0, 0) @[Router.scala 66:11]
      node _T_17 = eq(_T_16, UInt<1>("h00")) @[Router.scala 66:11]
      when _T_17 : @[Router.scala 66:11]
        printf(clock, UInt<1>(1), "U_W = %d\n", io.out_U.write) @[Router.scala 66:11]
        skip @[Router.scala 66:11]
      when io.out_U.write : @[Router.scala 68:26]
        node _T_18 = add(dataReg_R, dataReg_D) @[Router.scala 70:30]
        node _T_19 = tail(_T_18, 1) @[Router.scala 70:30]
        node _T_20 = add(_T_19, dataReg_L) @[Router.scala 70:42]
        node _T_21 = tail(_T_20, 1) @[Router.scala 70:42]
        dataReg_U <= _T_21 @[Router.scala 70:17]
        node _T_22 = bits(reset, 0, 0) @[Router.scala 71:13]
        node _T_23 = eq(_T_22, UInt<1>("h00")) @[Router.scala 71:13]
        when _T_23 : @[Router.scala 71:13]
          printf(clock, UInt<1>(1), "in U dout 2 = %d\n", io.out_U.dout) @[Router.scala 71:13]
          skip @[Router.scala 71:13]
        skip @[Router.scala 68:26]
      else : @[Router.scala 73:32]
        when io.out_D.write : @[Router.scala 73:32]
          node _T_24 = add(dataReg_U, dataReg_R) @[Router.scala 75:30]
          node _T_25 = tail(_T_24, 1) @[Router.scala 75:30]
          node _T_26 = add(_T_25, dataReg_L) @[Router.scala 75:42]
          node _T_27 = tail(_T_26, 1) @[Router.scala 75:42]
          dataReg_D <= _T_27 @[Router.scala 75:17]
          node _T_28 = bits(reset, 0, 0) @[Router.scala 76:13]
          node _T_29 = eq(_T_28, UInt<1>("h00")) @[Router.scala 76:13]
          when _T_29 : @[Router.scala 76:13]
            printf(clock, UInt<1>(1), "in U dout 3 = %d\n", io.out_U.dout) @[Router.scala 76:13]
            skip @[Router.scala 76:13]
          skip @[Router.scala 73:32]
        else : @[Router.scala 78:32]
          when io.out_L.write : @[Router.scala 78:32]
            node _T_30 = add(dataReg_U, dataReg_D) @[Router.scala 80:30]
            node _T_31 = tail(_T_30, 1) @[Router.scala 80:30]
            node _T_32 = add(_T_31, dataReg_R) @[Router.scala 80:42]
            node _T_33 = tail(_T_32, 1) @[Router.scala 80:42]
            dataReg_L <= _T_33 @[Router.scala 80:17]
            node _T_34 = bits(reset, 0, 0) @[Router.scala 81:13]
            node _T_35 = eq(_T_34, UInt<1>("h00")) @[Router.scala 81:13]
            when _T_35 : @[Router.scala 81:13]
              printf(clock, UInt<1>(1), "in U dout 4 = %d\n", io.out_U.dout) @[Router.scala 81:13]
              skip @[Router.scala 81:13]
            skip @[Router.scala 78:32]
          else : @[Router.scala 83:32]
            when io.out_R.write : @[Router.scala 83:32]
              node _T_36 = bits(reset, 0, 0) @[Router.scala 85:13]
              node _T_37 = eq(_T_36, UInt<1>("h00")) @[Router.scala 85:13]
              when _T_37 : @[Router.scala 85:13]
                printf(clock, UInt<1>(1), "data reg U = %d\n", dataReg_U) @[Router.scala 85:13]
                skip @[Router.scala 85:13]
              node _T_38 = bits(reset, 0, 0) @[Router.scala 86:13]
              node _T_39 = eq(_T_38, UInt<1>("h00")) @[Router.scala 86:13]
              when _T_39 : @[Router.scala 86:13]
                printf(clock, UInt<1>(1), "data reg D = %d\n", dataReg_D) @[Router.scala 86:13]
                skip @[Router.scala 86:13]
              node _T_40 = bits(reset, 0, 0) @[Router.scala 87:13]
              node _T_41 = eq(_T_40, UInt<1>("h00")) @[Router.scala 87:13]
              when _T_41 : @[Router.scala 87:13]
                printf(clock, UInt<1>(1), "data reg L = %d\n", dataReg_L) @[Router.scala 87:13]
                skip @[Router.scala 87:13]
              node _T_42 = bits(reset, 0, 0) @[Router.scala 88:13]
              node _T_43 = eq(_T_42, UInt<1>("h00")) @[Router.scala 88:13]
              when _T_43 : @[Router.scala 88:13]
                printf(clock, UInt<1>(1), "data reg R = %d\n", dataReg_R) @[Router.scala 88:13]
                skip @[Router.scala 88:13]
              node _T_44 = add(dataReg_U, dataReg_D) @[Router.scala 90:30]
              node _T_45 = tail(_T_44, 1) @[Router.scala 90:30]
              node _T_46 = add(_T_45, dataReg_L) @[Router.scala 90:42]
              node _T_47 = tail(_T_46, 1) @[Router.scala 90:42]
              dataReg_R <= _T_47 @[Router.scala 90:17]
              node _T_48 = bits(reset, 0, 0) @[Router.scala 93:13]
              node _T_49 = eq(_T_48, UInt<1>("h00")) @[Router.scala 93:13]
              when _T_49 : @[Router.scala 93:13]
                printf(clock, UInt<1>(1), "out_r_dout = %d\n", io.out_R.dout) @[Router.scala 93:13]
                skip @[Router.scala 93:13]
              node _T_50 = bits(reset, 0, 0) @[Router.scala 94:13]
              node _T_51 = eq(_T_50, UInt<1>("h00")) @[Router.scala 94:13]
              when _T_51 : @[Router.scala 94:13]
                printf(clock, UInt<1>(1), "datareg R = %d\n", dataReg_R) @[Router.scala 94:13]
                skip @[Router.scala 94:13]
              skip @[Router.scala 83:32]
      skip @[Router.scala 59:23]
    else : @[Router.scala 97:28]
      when io.in_D.read : @[Router.scala 97:28]
        dataReg_D <= io.in_D.din @[Router.scala 99:15]
        node _T_52 = bits(reset, 0, 0) @[Router.scala 100:11]
        node _T_53 = eq(_T_52, UInt<1>("h00")) @[Router.scala 100:11]
        when _T_53 : @[Router.scala 100:11]
          printf(clock, UInt<1>(1), "D = %d\n", io.in_D.read) @[Router.scala 100:11]
          skip @[Router.scala 100:11]
        node _T_54 = bits(reset, 0, 0) @[Router.scala 101:11]
        node _T_55 = eq(_T_54, UInt<1>("h00")) @[Router.scala 101:11]
        when _T_55 : @[Router.scala 101:11]
          printf(clock, UInt<1>(1), "Data D = %d\n", io.in_D.din) @[Router.scala 101:11]
          skip @[Router.scala 101:11]
        skip @[Router.scala 97:28]
      else : @[Router.scala 103:28]
        when io.in_L.read : @[Router.scala 103:28]
          dataReg_L <= io.in_L.din @[Router.scala 105:15]
          node _T_56 = bits(reset, 0, 0) @[Router.scala 106:11]
          node _T_57 = eq(_T_56, UInt<1>("h00")) @[Router.scala 106:11]
          when _T_57 : @[Router.scala 106:11]
            printf(clock, UInt<1>(1), "L = %d\n", io.in_L.read) @[Router.scala 106:11]
            skip @[Router.scala 106:11]
          node _T_58 = bits(reset, 0, 0) @[Router.scala 107:11]
          node _T_59 = eq(_T_58, UInt<1>("h00")) @[Router.scala 107:11]
          when _T_59 : @[Router.scala 107:11]
            printf(clock, UInt<1>(1), "Data L = %d\n", io.in_L.din) @[Router.scala 107:11]
            skip @[Router.scala 107:11]
          skip @[Router.scala 103:28]
        else : @[Router.scala 109:28]
          when io.in_R.read : @[Router.scala 109:28]
            dataReg_R <= io.in_R.din @[Router.scala 111:15]
            node _T_60 = bits(reset, 0, 0) @[Router.scala 112:11]
            node _T_61 = eq(_T_60, UInt<1>("h00")) @[Router.scala 112:11]
            when _T_61 : @[Router.scala 112:11]
              printf(clock, UInt<1>(1), "R = %d\n", io.in_R.read) @[Router.scala 112:11]
              skip @[Router.scala 112:11]
            node _T_62 = bits(reset, 0, 0) @[Router.scala 113:11]
            node _T_63 = eq(_T_62, UInt<1>("h00")) @[Router.scala 113:11]
            when _T_63 : @[Router.scala 113:11]
              printf(clock, UInt<1>(1), "Data R = %d\n", io.in_R.din) @[Router.scala 113:11]
              skip @[Router.scala 113:11]
            skip @[Router.scala 109:28]
    
